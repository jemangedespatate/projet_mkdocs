{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcda Site P\u00e9dagogique - SNT &amp; NSI","text":"<p>Bienvenue sur ce site p\u00e9dagogique qui centralise toutes les le\u00e7ons, ressources et activit\u00e9s destin\u00e9es aux \u00e9l\u00e8ves de Seconde (SNT), Premi\u00e8re NSI, et Terminale NSI. Ce site a pour objectif de guider les \u00e9l\u00e8ves tout au long de l'ann\u00e9e scolaire, de mani\u00e8re progressive et interactive.</p> \ud83d\udd39 SNT (Sciences Num\u00e9riques et Technologie) - SecondeNSI premiereNSI terminale"},{"location":"#objectif","title":"\ud83c\udfaf Objectif","text":"<p>L'objectif de la SNT est de permettre aux \u00e9l\u00e8ves de comprendre les objets num\u00e9riques et les applications qu\u2019ils utilisent au quotidien. Ils d\u00e9couvriront les fondements du num\u00e9rique \u00e0 travers diff\u00e9rentes th\u00e9matiques actuelles.</p>"},{"location":"#programme","title":"\ud83d\udcd8 Programme","text":"<ul> <li>\u2139\ufe0f Introduction SNT</li> <li>\ud83d\udc0d Programmation Python</li> <li>\ud83d\udcf8 Photographie Num\u00e9rique</li> <li>\ud83c\udf10 Internet</li> <li>\ud83d\udcc4 Web</li> <li>\ud83d\udcac R\u00e9seaux sociaux</li> <li>\ud83d\udccd G\u00e9olocalisation</li> <li>\ud83d\udcca Donn\u00e9es Structur\u00e9es</li> <li>\ud83d\udce1 Objets Connect\u00e9s</li> </ul>"},{"location":"#objectif_1","title":"\ud83c\udfaf Objectif","text":"<p>L'objectif de la Premi\u00e8re NSI est de permettre aux \u00e9l\u00e8ves de comprendre les principes fondamentaux de l\u2019informatique et de la programmation, et d\u2019apprendre \u00e0 concevoir, analyser et d\u00e9velopper des programmes.</p> <p>Ils d\u00e9couvriront les notions cl\u00e9s telles que les algorithmes, les structures de donn\u00e9es, les fonctions, la programmation orient\u00e9e objet et les bases de donn\u00e9es, tout en d\u00e9veloppant leur logique et leur capacit\u00e9 \u00e0 r\u00e9soudre des probl\u00e8mes informatiques.</p>"},{"location":"#programme_1","title":"\ud83d\udcd8 Programme","text":"<ul> <li>\ud83d\udc0d Programmation Python</li> <li>\ud83d\udd22 Type et valeur de base</li> </ul>"},{"location":"#objectif_2","title":"\ud83c\udfaf Objectif","text":"<p>L'objectif de la Terminale NSI est de permettre aux \u00e9l\u00e8ves de ma\u00eetriser des concepts avanc\u00e9s en informatique et en programmation, et de mettre en \u0153uvre des projets plus complexes. Ils approfondiront les notions de programmation orient\u00e9e objet, structures de donn\u00e9es avanc\u00e9es, algorithmes de tri et de recherche, gestion de bases de donn\u00e9es et r\u00e9seaux, tout en d\u00e9veloppant leur capacit\u00e9 \u00e0 concevoir, analyser et optimiser des programmes.</p>"},{"location":"#programme_2","title":"\ud83d\udcd8 Programme","text":"<ol> <li>\ud83d\udc0d Programmation Python</li> </ol>"},{"location":"#a-propos","title":"\ud83d\udee0\ufe0f \u00c0 propos","text":"<p>Ce site est un outil \u00e9volutif, mis \u00e0 jour r\u00e9guli\u00e8rement avec de nouveaux contenus, exercices et projets. Il est con\u00e7u pour favoriser l\u2019autonomie, l\u2019exploration et la compr\u00e9hension du num\u00e9rique et de l'informatique chez les \u00e9l\u00e8ves.</p>"},{"location":"#contact","title":"\ud83d\udcec Contact","text":"<p>Pour toute question ou remarque, merci de me contacter via l\u2019ENT ou directement en classe.</p> <p>Ensemble, explorons le monde du num\u00e9rique avec curiosit\u00e9 et rigueur.</p>"},{"location":"NSI_1/Programmation_Python/exercice/","title":"Exercices pratiques","text":"<p>1. Variables et affichage <p>Demandez \u00e0 l\u2019utilisateur son nom et son \u00e2ge, puis affiche :</p> <pre><code>Bonjour &lt;nom&gt;, dans 10 ans tu auras &lt;\u00e2ge+10&gt; ans.\n</code></pre> <p>indice: utiliser la fonction <code>input()</code></p> <p>2. Types de donn\u00e9es <p>Cr\u00e9ez trois variables : une enti\u00e8re, une d\u00e9cimale et une cha\u00eene de caract\u00e8res. Affiche le type de chaque variable avec la fonction <code>type()</code>.</p> <p>3. Op\u00e9rations math\u00e9matiques <p>\u00c9crivez un programme qui demande deux nombres \u00e0 l\u2019utilisateur et affiche :</p> <ul> <li>la somme</li> <li>la diff\u00e9rence</li> <li>le produit</li> <li>le quotient entier</li> <li>le reste de la division</li> </ul> <p>4. Conditions <p>\u00c9crivait un programme qui demande une note \u00e0 l\u2019utilisateur et affiche :</p> <ul> <li><code>\"Tr\u00e8s bien\"</code> si la note \u2265 16</li> <li><code>\"Assez bien\"</code> si la note \u2265 12</li> <li><code>\"Passable\"</code> si la note \u2265 10</li> <li><code>\"Insuffisant\"</code> sinon</li> </ul> <p>5. Boucles <p>Affichez tous les nombres pairs de 1 \u00e0 20 en utilisant :</p> <ul> <li>une boucle <code>for</code></li> <li>une boucle <code>while</code></li> </ul> <p>6. Fonctions <p>cr\u00e9ez une fonction <code>carre(x)</code> qui renvoie le carr\u00e9 d\u2019un nombre.</p> <p>Testez-la avec plusieurs nombres et affichez les r\u00e9sultats.</p>"},{"location":"NSI_1/Programmation_Python/exercice/#calcul-de-moyenne","title":"calcul de moyenne","text":"<ol> <li>Demandez \u00e0 l\u2019utilisateur combien de notes il veut entrer.</li> <li>Utilisez une boucle pour demander chaque note une par une. (indice: utilisez <code>input</code>)</li> <li> <p>\u00c0 chaque note saisie :</p> </li> <li> <p>ajoutez-la \u00e0 un total pour calculer la moyenne</p> </li> <li> <p>v\u00e9rifiez si elle est sup\u00e9rieure \u00e0 la moyenne courante (facultatif pour avancer pas \u00e0 pas).</p> </li> <li> <p>Cr\u00e9ez une fonction <code>mention(note)</code> qui renvoie :</p> </li> <li> <p><code>\"Tr\u00e8s bien\"</code> si la note \u2265 16</p> </li> <li><code>\"Assez bien\"</code> si la note \u2265 12</li> <li><code>\"Passable\"</code> si la note \u2265 10</li> <li> <p><code>\"Insuffisant\"</code> sinon</p> </li> <li> <p>Apr\u00e8s la saisie de toutes les notes, calculez la moyenne et affichez la mention correspondante.</p> </li> <li> <p>Affichez ensuite combien de notes sont sup\u00e9rieures \u00e0 la moyenne.</p> </li> </ol> <p>Exemple d\u2019ex\u00e9cution :</p> <pre><code>Combien de notes ? 5\nNote 1 : 14\nNote 2 : 18\nNote 3 : 9\nNote 4 : 12\nNote 5 : 16\n\nMoyenne : 13.8 \u2192 Assez bien\nNombre de notes sup\u00e9rieures \u00e0 la moyenne : 3\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice/#exercice-complementaire","title":"Exercice compl\u00e9mentaire","text":""},{"location":"NSI_1/Programmation_Python/exercice/#exercice-1","title":"Exercice 1","text":"<p>Analyse de code :</p> <pre><code>nombre = 0\ncondition = True\nwhile condition == True:\n    if nombre == 10:\n        condition = False\n    print(nombre)\n    nombre = nombre + 1\n</code></pre> <ol> <li>Quelles sont les variables utilis\u00e9es ici ?</li> <li>Quelles valeurs contiennent-elles ?</li> <li>De quel type de boucle s\u2019agit-il ici ? Quelle est la condition n\u00e9cessaire pour que cette boucle s\u2019arr\u00eate ?</li> <li>\u00c0 quel moment cette condition intervient-elle ?</li> <li>Qu\u2019affiche le programme ? Donnez le premier et le dernier \u00e9l\u00e9ment affich\u00e9s par le programme.</li> </ol> <pre><code>nombre = 0\ncondition = True\nwhile condition == True:\n    nombre = nombre + 1\n    if nombre == 10:\n        condition = False\n    print(nombre)\n</code></pre> <ol> <li>Et maintenant, que va afficher le programme ?</li> <li>Transformez le premier programme pour le simplifier.</li> <li>Recr\u00e9ez le premier programme avec une boucle for (en 2 lignes).</li> </ol>"},{"location":"NSI_1/Programmation_Python/exercice/#exercice-2","title":"Exercice 2","text":"<pre><code>import random\n\ndef reste(a, b):\n    return a % b\n\ndef quotient(a, b):\n    return a // b\n\ndef affichage(a, b):\n    r = reste(a, b)\n    q = quotient(a, b)\n    print(a, \" = \", b, \" \u00d7 \", q, \" + \", r)\n\nfor i in range(10):\n    a = random.randint(1, 10)  # \u00e9vite b=0\n    b = random.randint(1, 10)\n    affichage(a, b)\n</code></pre> <ol> <li>Citez le nom de toutes les fonctions pr\u00e9sentes dans ce code.</li> <li>Que fait la fonction <code>reste</code> ?</li> <li>Que fait la fonction <code>quotient</code> ?</li> <li>Que fait la fonction <code>affichage</code> ?</li> <li>Dans la fonction <code>affichage</code>, dans quelles variables sont stock\u00e9s le quotient et le reste ?</li> <li>Combien d\u2019it\u00e9rations (tours) la boucle <code>for</code> va-t-elle effectuer ?</li> <li>Donnez les valeurs que <code>i</code> va prendre au fur et \u00e0 mesure.</li> <li>Que fait la fonction <code>random.randint</code> ?</li> <li>Finalement, que va faire le programme ?</li> </ol>"},{"location":"NSI_1/Programmation_Python/exercice/#exercice-3","title":"Exercice 3","text":"<p>On consid\u00e8re la cha\u00eene suivante :</p> <pre><code>texte = \"informatique\"\n</code></pre> <p>\u00c9crivez un programme qui affiche chaque caract\u00e8re de la cha\u00eene sur une nouvelle ligne.</p> <p>Exemple attendu :</p> <pre><code>i\nn\nf\no\nr\nm\na\nt\ni\nq\nu\ne\n</code></pre> <p>Affichez chaque caract\u00e8re de la cha\u00eene avec sa position (indice).</p> <p>Exemple attendu :</p> <pre><code>0 : i\n1 : n\n2 : f\n3 : o\n...\n10 : e\n</code></pre> <p>\u00c9crivez un programme qui compte combien de fois la lettre <code>\"i\"</code> appara\u00eet dans la cha\u00eene <code>\"informatique\"</code>.</p> <p>Exemple attendu :</p> <pre><code>La lettre i appara\u00eet 2 fois.\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice/#bonus","title":"bonus","text":"<p>\u00c9crivez un programme qui inverse la cha\u00eene <code>\"informatique\"</code>.</p> <p>Exemple attendu :</p> <pre><code>euqitamrofni\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_2/","title":"\ud83d\udcdd S\u00e9rie d\u2019exercices Python","text":"<p>Dans cette s\u00e9rie d\u2019exercices, vous allez vous entra\u00eener \u00e0 manipuler les variables, les boucles, les conditions et \u00e0 \u00e9crire vos propres fonctions en Python.</p> <p>\ud83d\udc49 Consigne g\u00e9n\u00e9rale : \u00c9crivez vos r\u00e9ponses directement dans le fichier <code>.py</code>, \u00e0 la suite de <code># r\u00e9ponse</code>.</p>"},{"location":"NSI_1/Programmation_Python/exercice_2/#exercices","title":"\u26a1 Exercices","text":"<p>Exercice 1 : \u00c9changer deux variables</p> <p>Compl\u00e9tez le code suivant pour \u00e9changer les valeurs des variables <code>a</code> et <code>b</code>.</p> <pre><code>from random import *\n\na = randint(0, 10)\nb = randint(0, 10)\n\nprint(\"avant \", a, b)\n\n# r\u00e9ponse\n\nprint(\"apr\u00e8s \", a, b)\n</code></pre> <p>Exercice 2 : Compter de a \u00e0 b</p> <p>Compl\u00e9tez la fonction suivante qui doit :</p> <ul> <li>compter de <code>a</code> jusqu\u2019\u00e0 <code>b</code> inclus,</li> <li>afficher chaque \u00e9tape,</li> <li>renvoyer le nombre d\u2019\u00e9tapes effectu\u00e9es.</li> </ul> <pre><code>def compte(a, b):\n    # r\u00e9ponse\n    pass\n\ncompte(0, 10)\n</code></pre> <p>Exercice 3 : Division euclidienne</p> <p>\u00c9crivez une fonction qui renvoie le reste de la division euclidienne de deux entiers <code>a</code> et <code>b</code>, d\u2019abord en utilisant l\u2019op\u00e9rateur Python (<code>%</code>), puis sans l\u2019utiliser.</p> <p>Exercice 4 : V\u00e9rifier la majorit\u00e9</p> <p>\u00c9crivez une fonction qui demande l\u2019\u00e2ge de l\u2019utilisateur (avec <code>input</code>) et renvoie un bool\u00e9en indiquant s\u2019il est majeur.</p> <p>Exercice 5 : Plus grand de trois nombres</p> <p>Compl\u00e9tez la fonction suivante qui renvoie le plus grand des 3 nombres mis en parametre:</p> <pre><code>def plus_grand(x, y, z):\n    # r\u00e9ponse\n    pass\n\n# quelques tests\nprint(plus_grand(1, 2, 3))\nprint(plus_grand(-1, 0.2, 4))\nprint(plus_grand(\"a\", \"b\", \"A\"))\n</code></pre> <p>Exercice 6 : Inverser un mot</p> <p>\u00c9crivez une fonction qui renvoie le mot invers\u00e9 sans modifier l\u2019original.</p> <pre><code>def inverse(mot):\n    # r\u00e9ponse\n    pass\n\n# quelques tests\nprint(inverse(\"NSI\"))\nprint(inverse(\"kayak\"))\n</code></pre> <p>Exercice 7 : Nombre d\u2019apparitions d\u2019une lettre</p> <p>\u00c9crivez une fonction qui compte le nombre d\u2019apparitions d\u2019une lettre dans une phrase.</p> <pre><code>def apparition(phrase, lettre):\n    # r\u00e9ponse\n    pass\n\ntexte_somptueux = \"J'adore la NSI. Vraiment l'informatique c'est super top.\"\nprint(apparition(texte_somptueux, \"i\"))\nprint(apparition(texte_somptueux, \".\"))\n</code></pre> <p>Exercice 8 : Inverser des bits</p> <p>\u00c9crivez une fonction qui inverse tous les bits d\u2019un nombre binaire donn\u00e9 sous forme de cha\u00eene de caract\u00e8res.</p> <pre><code>def inversion(binaire):\n    # r\u00e9ponse\n    pass\n\nprint(inversion(\"01000001\"))\n</code></pre> <p>Exercice 9 : Moyenne des notes</p> <p>\u00c9crivez une fonction qui demande 5 notes \u00e0 l\u2019utilisateur et lui renvoie sa moyenne.</p> <p>Exercice 10 : Table de multiplication</p> <p>Affichez les 20 premiers termes de la table de multiplication par 7. \ud83d\udc49 Les multiples de 3 doivent \u00eatre signal\u00e9s par un <code>*</code>.</p> <p>Exemple :</p> <pre><code>7 14 21* 28 35 42* 49 ...\n</code></pre> <p>Exercice 11 : Deux d\u00e9s cons\u00e9cutifs</p> <p>\u00c9crivez une fonction qui simule des lancers de d\u00e9s et renvoie le nombre d\u2019essais n\u00e9cessaires pour obtenir deux 6 cons\u00e9cutifs.</p> <p>Exercice 12 : Mot de passe</p> <p>\u00c9crivez une fonction qui demande un mot de passe \u00e0 l\u2019utilisateur. \ud83d\udc49 L\u2019utilisateur a droit \u00e0 4 essais maximum. \ud83d\udc49 La fonction s\u2019arr\u00eate si le code est correct.</p> <pre><code>mdp = \"NSI4ever\"\n</code></pre> <p>Exercice 13 : Jeu des d\u00e9s</p> <p>Un joueur lance deux d\u00e9s et additionne les r\u00e9sultats. \ud83d\udc49 Il continue tant que la somme n\u2019est pas comprise entre 7 et 12 inclus. \ud83d\udc49 \u00c9crivez un programme qui automatise cette partie.</p> <p>Exercice 14 : Pourcentage de 6</p> <p>\u00c9crivez une fonction <code>jeu(n)</code> qui simule 1000 tirages al\u00e9atoires de nombres entre 1 et 6, et renvoie le pourcentage de <code>6</code> obtenus.</p> <p>\ud83d\udc49 Indice : utilisez <code>randint</code> du module <code>random</code>.</p>"},{"location":"NSI_1/Programmation_Python/exercice_3/","title":"Exercice 3","text":""},{"location":"NSI_1/Programmation_Python/exercice_3/#exercices-sur-les-boucles-et-les-fonctions","title":"Exercices sur les boucles et les fonctions","text":""},{"location":"NSI_1/Programmation_Python/exercice_3/#1-affichage-simple-avec-une-boucle","title":"1. Affichage simple avec une boucle","text":"<p>\u00c9cris un programme qui affiche les nombres de 1 \u00e0 10 en utilisant une boucle <code>for</code>.</p> R\u00e9ponse : <pre><code>for i in range(1,11):\n    print(i)\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#2-somme-des-entiers","title":"2. Somme des entiers","text":"<p>\u00c9cris un programme qui calcule et affiche la somme des nombres de 1 \u00e0 100 en utilisant une boucle.</p> R\u00e9ponse : <pre><code>resultat = 0\nfor i in range(1,101):\n    resultat = resultat + i\nprint(resultat)\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#3-compter-les-nombres-pairs","title":"3. Compter les nombres pairs","text":"<p>\u00c9cris un programme qui affiche tous les nombres pairs entre 1 et 50 gr\u00e2ce \u00e0 une boucle.</p> R\u00e9ponse : <pre><code>for i in range(1,51):\n    if i % 2 == 0:\n        print(i)\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#4-factorielle","title":"4. Factorielle","text":"<p>\u00c9cris une fonction <code>factorielle(n)</code> qui calcule la factorielle de <code>n</code>. Teste la fonction avec plusieurs valeurs.</p> Exemple : <p><code>factorielle(5) = 120</code></p> R\u00e9ponse : <pre><code>def factorielle(n):\n    resultat = 1\n    for i in range(1,n+1):\n        resultat = resultat + i\n    return resultat\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#5-table-de-multiplication","title":"5. Table de multiplication","text":"<p>\u00c9cris une fonction <code>table(n)</code> qui affiche la table de multiplication de <code>n</code> (de 1 \u00e0 10).</p> Exemple : <p><code>table(7)</code> doit afficher la table de 7.</p> R\u00e9ponse : <pre><code>def table(n):\n    for i in range(1,11):\n        print(n,\" x \", i, \" = \", n*i)\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#6-compter-les-voyelles","title":"6. Compter les voyelles","text":"<p>\u00c9cris une fonction <code>compter_voyelles(mot)</code> qui retourne le nombre de voyelles contenues dans une cha\u00eene de caract\u00e8res.</p> Exemple : <p><code>compter_voyelles(\"Bonjour\") \u2192 3</code>.</p> R\u00e9ponse : <pre><code>def compter_voyelles(mot):\n    resultat = 0\n    for lettre in mot:\n        if lettre in \"aeiouy\":\n            resultat = resultat + 1\n    return resultat\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#7-somme-des-chiffres","title":"7. Somme des chiffres","text":"<p>\u00c9cris une fonction <code>somme_chiffres(n)</code> qui calcule la somme des chiffres d\u2019un nombre entier.</p> Exemple : <p><code>somme_chiffres(1234) \u2192 10</code>.</p> R\u00e9ponse : <pre><code>def somme_chiffres(n):\n    mot_n = str(n)\n    resultat = 0\n    for chiffre in mot_n:\n        resultat = resultat + int(chiffre)\n    return resultat\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#8-suite-de-fibonacci-optionnel","title":"8. Suite de Fibonacci (optionnel)","text":"<p>\u00c9cris une fonction <code>fibonacci(n)</code> qui affiche les <code>n</code> premiers termes de la suite de Fibonacci.</p> Exemple : <p><code>fibonacci(7)</code> \u2192 <code>0 1 1 2 3 5 8</code>.</p> R\u00e9ponse : <pre><code>def fibonacci(n):\n    a = 0\n    b = 1\n    for i in range(n):\n        print(a, end=\" \")\n        temp = a + b\n        a = b\n        b = temp\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#9-nombre-premier","title":"9. Nombre premier","text":"<p>\u00c9cris une fonction <code>est_premier(n)</code> qui renvoie <code>True</code> si <code>n</code> est un nombre premier, et <code>False</code> sinon. Puis, \u00e9cris un programme qui affiche tous les nombres premiers jusqu\u2019\u00e0 100.</p> R\u00e9ponse : <pre><code>def est_premier(n):\n    if n &lt; 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n\n# Affichage des nombres premiers jusqu'\u00e0 100\nfor nombre in range(2, 101):\n    if est_premier(nombre):\n        print(nombre, end=\" \")\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#10-dessin-avec-boucles","title":"10. Dessin avec boucles","text":"<p>\u00c9cris un programme qui affiche un triangle de hauteur <code>n</code> en utilisant une boucle.</p> Exemple : <p>pour <code>n = 5</code> :</p> <pre><code>*\n**\n***\n****\n*****\n</code></pre> R\u00e9ponse : <pre><code>def triangle(n):\n    for i in range(1,n+1):\n        ligne = \"*\" * i\n        print(ligne)\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#exercice-complementaire","title":"exercice compl\u00e9mentaire","text":""},{"location":"NSI_1/Programmation_Python/exercice_3/#11-nombres-parfaits","title":"11. Nombres parfaits","text":"<p>Un nombre parfait est un nombre \u00e9gal \u00e0 la somme de ses diviseurs propres (par exemple 6 = 1 + 2 + 3).</p> <ul> <li>\u00c9cris une fonction <code>est_parfait(n)</code> qui v\u00e9rifie si <code>n</code> est un nombre parfait.</li> <li>\u00c9cris un programme qui affiche tous les nombres parfaits entre 1 et 1000.</li> </ul> R\u00e9ponse : <pre><code>def est_parfait(n):\n    somme = 0\n    for i in range(1, n):\n        if n % i == 0:\n            somme += i\n    return somme == n\n\n\n# Affichage des nombres parfaits entre 1 et 1000\nfor nombre in range(1, 1001):\n    if est_parfait(nombre):\n        print(nombre, end=\" \")\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#12-dessin-en-losange","title":"12. Dessin en losange","text":"<p>\u00c9cris une fonction <code>losange(n)</code> qui affiche un losange de hauteur <code>2n - 1</code> en utilisant des boucles.</p> Exemple : <p>pour <code>n = 4</code> :</p> <pre><code>*\n***\n*****\n*******\n*****\n***\n*\n</code></pre> R\u00e9ponse : <pre><code>def losange(n):\n    for i in range(1,n+1):\n        ligne = \"*\" * i\n        print(ligne)\n\n    j = n - 1\n    while j &gt; 0:\n        ligne = \"*\" * j\n        print(ligne)\n        j = j-1\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#13-decomposition-en-facteurs-premiers","title":"13. D\u00e9composition en facteurs premiers","text":"<p>\u00c9cris une fonction <code>facteurs_premiers(n)</code> qui d\u00e9compose un entier en produit de nombres premiers et les affiches.</p> Exemple : <ul> <li><code>facteurs_premiers(84)</code> \u2192 <code>2, 2, 3, 7</code></li> <li><code>facteurs_premiers(97)</code> \u2192 <code>97</code></li> </ul> R\u00e9ponse : <pre><code>def facteurs_premiers(n):\n    facteur = 2\n    while n &gt; 1:\n        if n % facteur == 0:\n            print(facteur, end=\"\")\n            n //= facteur\n            if n &gt; 1:\n                print(\", \", end=\"\")\n        else:\n            facteur += 1\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#14-nombre-mystere","title":"14. Nombre myst\u00e8re","text":"<p>\u00c9cris une fonction <code>deviner(n)</code> qui fait deviner un nombre entre 1 et <code>n</code>.</p> <ul> <li>L\u2019ordinateur choisit un nombre au hasard.</li> <li>L\u2019utilisateur doit proposer des valeurs (saisies au clavier).</li> <li>Le programme indique trop grand ou trop petit.</li> <li>Quand le nombre est trouv\u00e9, afficher le nombre d\u2019essais.</li> </ul> R\u00e9ponse : <pre><code>import random\n\ndef deviner(n):\n    secret = random.randint(1, n)\n    essais = 0\n    trouve = False\n\n    print(f\"J'ai choisi un nombre entre 1 et {n}. Essaie de le deviner !\")\n\n    while trouve != True:\n        proposition = int(input(\"Ta proposition : \"))\n        essais += 1\n\n        if proposition &lt; secret:\n            print(\"Trop petit !\")\n        elif proposition &gt; secret:\n            print(\"Trop grand !\")\n        else:\n            print(f\"Bravo ! Tu as trouv\u00e9 en {essais} essai(s).\")\n            trouve = True\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#15-somme-des-chiffres-pairs","title":"15. Somme des chiffres pairs","text":"<p>\u00c9cris une fonction <code>somme_pairs(nombre)</code> qui renvoie la somme des chiffres pairs d\u2019un entier.</p> Exemple : <ul> <li><code>somme_pairs(48215)</code> \u2192 <code>14</code>  (car 4 + 8 + 2 = 14)  </li> </ul> R\u00e9ponse : <pre><code>def somme_pairs(n):\n    mot_n = str(n)\n    resultat = 0\n    for chiffre in mot_n:\n        if int(chiffre) % 2 == 0: \n            resultat = resultat + int(chiffre)\n    return resultat\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#16-triangle-inverse","title":"16. Triangle invers\u00e9","text":"<p>\u00c9cris une fonction <code>triangle_inverse(n)</code> qui affiche un triangle de <code>n</code> lignes avec des <code>*</code> d\u00e9croissants.</p> Exemple : <ul> <li><code>triangle_inverse(5)</code> <pre><code>*****\n****\n***\n**\n*\n</code></pre></li> </ul> R\u00e9ponse : <pre><code>def losange(n):\n    j = n - 1\n    while j &gt; 0:\n        ligne = \"*\" * j\n        print(ligne)\n        j = j-1\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#17-anagrammes","title":"17. Anagrammes","text":"<p>\u00c9cris une fonction <code>est_anagramme(mot1, mot2)</code> qui retourne <code>True</code> si les deux mots sont des anagrammes (m\u00eames lettres en nombre identique, ordre diff\u00e9rent).</p> Exemple : <ul> <li><code>est_anagramme(\"chien\", \"niche\")</code> \u2192 <code>True</code> </li> <li><code>est_anagramme(\"python\", \"typhon\")</code> \u2192 <code>True</code> </li> <li><code>est_anagramme(\"test\", \"tseta\")</code> \u2192 <code>False</code> </li> </ul> R\u00e9ponse : <pre><code>def est_anagramme(mot1, mot2):\n    # On met les mots en minuscules pour \u00e9viter les diff\u00e9rences entre majuscules/minuscules\n    mot1 = mot1.lower()\n    mot2 = mot2.lower()\n\n    # Si les mots n'ont pas la m\u00eame longueur, ils ne peuvent pas \u00eatre des anagrammes\n    if len(mot1) != len(mot2):\n        return False\n\n    # Pour chaque lettre du premier mot\n    for lettre in mot1:\n        # On cherche cette lettre dans le deuxi\u00e8me mot\n        position = -1\n        for i in range(len(mot2)):\n            if mot2[i] == lettre:\n                position = i  # on note o\u00f9 elle se trouve\n                break\n\n        # Si la lettre n'est pas trouv\u00e9e \u2192 ce n\u2019est pas une anagramme\n        if position == -1:\n            return False\n\n        # On enl\u00e8ve la lettre trouv\u00e9e dans mot2 en collant la partie gauche a la lettre a sa partie a droite\n        mot2 = mot2[:position] + mot2[position+1:]\n\n    # Si \u00e0 la fin, mot2 est vide, toutes les lettres ont \u00e9t\u00e9 utilis\u00e9es \u2192 c\u2019est une anagramme\n    return len(mot2) == 0\n\n\n# --- Programme principal ---\nmotA = input(\"Entrez le premier mot : \")\nmotB = input(\"Entrez le deuxi\u00e8me mot : \")\n\nif est_anagramme(motA, motB):\n    print(\"Les deux mots sont des anagrammes \u2705\")\nelse:\n    print(\"Les deux mots ne sont pas des anagrammes \u274c\")\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#18-mots-en-escalier","title":"18. Mots en escalier","text":"<p>\u00c9cris une fonction <code>escalier_mot(mot)</code> qui affiche un mot en escalier.</p> Exemple : <ul> <li><code>escalier_mot(\"PYTHON\")</code> <pre><code>P\nPY\nPYT\nPYTH\nPYTHO\nPYTHON\n</code></pre></li> </ul> R\u00e9ponse : <pre><code>def escalier_mot(mot):\n    ligne = \"\"\n    for lettre in mot:\n        ligne = ligne + lettre\n        print(ligne)\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#19-symetrie-verticale","title":"19. Sym\u00e9trie verticale","text":"<p>\u00c9cris une fonction <code>symetrie(mot)</code> qui cr\u00e9e un effet miroir en concat\u00e9nant le mot avec son inverse.</p> Exemple : <ul> <li><code>symetrie(\"code\")</code> \u2192 <code>\"codeedoc\"</code> </li> </ul> R\u00e9ponse : <pre><code>def symetrie(mot):\n    mot_copie = mot[:] # ici, on effectue une copie \u00e0 l'aide de [:] pour eviter d'ecraser le mot mis en parametre\n\n    i = len(mot) -1\n    while i &gt;= 0:\n        mot_copie = mot_copie + mot[i]\n        i = i -1\n    return mot_copie\n</code></pre>"},{"location":"NSI_1/Programmation_Python/exercice_3/#20-caractere-le-plus-frequent","title":"20. Caract\u00e8re le plus fr\u00e9quent","text":"<p>\u00c9cris une fonction <code>plus_frequent(texte)</code> qui retourne le caract\u00e8re le plus fr\u00e9quent dans une cha\u00eene (en ignorant les espaces).</p> Exemple : <ul> <li><code>plus_frequent(\"abracadabra\")</code> \u2192 <code>'a'</code> </li> </ul> R\u00e9ponse : <pre><code>def plus_frequent(texte):\n\n    caractere_max = \"\"   # le caract\u00e8re le plus fr\u00e9quent\n    frequence_max = 0    # combien de fois il appara\u00eet\n\n    # On parcourt chaque caract\u00e8re du texte\n    for caractere in texte:\n        if caractere != \" \":  # on ignore les espaces\n            # Compter combien de fois ce caract\u00e8re appara\u00eet\n            compteur = 0\n            for c in texte:\n                if c == caractere:\n                    compteur += 1\n\n            # Si ce caract\u00e8re est plus fr\u00e9quent que le pr\u00e9c\u00e9dent, on le garde\n            if compteur &gt; frequence_max:\n                frequence_max = compteur\n                caractere_max = caractere\n\n    return caractere_max\n</code></pre>"},{"location":"NSI_1/Programmation_Python/fiche_memo/","title":"\ud83d\udc0d Fiche M\u00e9mo Python","text":""},{"location":"NSI_1/Programmation_Python/fiche_memo/#1-variables","title":"1. Variables","text":"<p>Une variable est un nom qui sert \u00e0 stocker une valeur.</p> <pre><code># Affectation\nx = 10        # entier\ny = 3.14      # flottant\nnom = \"Alice\" # cha\u00eene de caract\u00e8res\nok = True     # bool\u00e9en\n</code></pre> <p>\u26a0\ufe0f les variables doivent avoir des noms coherents</p>"},{"location":"NSI_1/Programmation_Python/fiche_memo/#2-types-de-donnees","title":"2. Types de donn\u00e9es","text":"<p>Les principaux types int\u00e9gr\u00e9s en Python :</p> <ul> <li>int \u2192 nombres entiers \u2192 <code>5, -12, 1000</code></li> <li>float \u2192 nombres d\u00e9cimaux \u2192 <code>3.14, -2.7</code></li> <li>str \u2192 cha\u00eenes de caract\u00e8res \u2192 <code>\"Bonjour\"</code></li> <li>bool \u2192 bool\u00e9ens \u2192 <code>True / False</code></li> </ul>"},{"location":"NSI_1/Programmation_Python/fiche_memo/#3-conditions","title":"3. Conditions","text":"<p>Permettent de faire des choix.</p> <pre><code>age = 18\n\nif age &gt;= 18:\n    print(\"Majeur\")\nelif age &gt;= 13:\n    print(\"Adolescent\")\nelse:\n    print(\"Enfant\")\n</code></pre> <p>\ud83d\udd11 Op\u00e9rateurs logiques et de comparaison :</p> <ul> <li><code>==</code> (\u00e9gal) / <code>!=</code> (diff\u00e9rent)</li> <li><code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code></li> <li><code>and</code> (ET), <code>or</code> (OU), <code>not</code> (NON)</li> </ul>"},{"location":"NSI_1/Programmation_Python/fiche_memo/#4-boucles","title":"4. Boucles","text":""},{"location":"NSI_1/Programmation_Python/fiche_memo/#boucle-for","title":"Boucle <code>for</code>:","text":"<pre><code>for i in range(5):   # de 0 \u00e0 4\n    print(i)\n\nfor lettre in \"Python\":\n    print(lettre)\n</code></pre>"},{"location":"NSI_1/Programmation_Python/fiche_memo/#boucle-while","title":"Boucle <code>while</code>:","text":"<pre><code>compteur = 0\nwhile compteur &lt; 5:\n    print(compteur)\n    compteur += 1\n</code></pre>"},{"location":"NSI_1/Programmation_Python/fiche_memo/#5-fonctions","title":"5. Fonctions","text":"<p>Une fonction permet de r\u00e9utiliser du code.</p> <pre><code># D\u00e9finition\ndef dire_bonjour(nom: str) -&gt; str:\n    return \"Bonjour \" + nom\n\n# Appel\nprint(dire_bonjour(\"Alice\"))\n</code></pre> <p>\u26a0\ufe0f Une fonction poss\u00e8de un nom (ici le nom est <code>dire_bonjour</code>).   </p> <p>\u26a0\ufe0f Une fonction poss\u00e8de des param\u00e8tres ou non (ici le param\u00e8tre est <code>nom</code>).   </p> <p>\u26a0\ufe0f Une fonction poss\u00e8de un r\u00e9sultat ou non (ici le r\u00e9sultat est une cha\u00eene de caract\u00e8res).   </p> <p>\u26a0\ufe0f L\u2019en-t\u00eate d\u2019une fonction peut inclure des annotations de type pour pr\u00e9ciser le type des param\u00e8tres et du r\u00e9sultat (ici <code>nom: str</code> indique que <code>nom</code> est une cha\u00eene, et <code>-&gt; str</code> indique que la fonction retourne une cha\u00eene).</p>"},{"location":"NSI_1/Programmation_Python/fiche_memo/#6-bonus-petites-astuces-utiles","title":"6. Bonus : petites astuces utiles","text":"<ul> <li>Commentaire :</li> </ul> <p>Mettre <code>#</code> au sein d'un code permet de cr\u00e9er un commentaire qui ne sera pas ex\u00e9cut\u00e9 lors du lancement du programme.</p> <ul> <li>Entr\u00e9e utilisateur :</li> </ul> <pre><code>nom = input(\"Quel est ton nom ? \")\n</code></pre> <ul> <li>Conversion de type :</li> </ul> <pre><code>x = int(\"10\")    # cha\u00eene \u2192 entier\ny = str(123)     # entier \u2192 cha\u00eene\n</code></pre> <ul> <li>formatage rapide :</li> </ul> <pre><code>age = 20\nprint(\"J\u2019ai \", age ,\"  ans\")\n</code></pre>"},{"location":"NSI_1/Programmation_Python/introductions_prog/","title":"\ud83d\udda5\ufe0f Introduction \u00e0 la programmation","text":""},{"location":"NSI_1/Programmation_Python/introductions_prog/#1-quest-ce-que-programmer","title":"1. Qu\u2019est-ce que programmer ?","text":"<p>Programmer, c\u2019est donner des instructions pr\u00e9cises \u00e0 un ordinateur pour qu\u2019il ex\u00e9cute une t\u00e2che. Un programme est comme une recette de cuisine :</p> <ul> <li>il faut des ingr\u00e9dients (les donn\u00e9es)</li> <li>suivre des \u00e9tapes (les instructions)</li> <li>et obtenir un r\u00e9sultat (la sortie du programme).</li> </ul> <p>En NSI, on utilise principalement Python, un langage simple et tr\u00e8s r\u00e9pandu.</p> <p>thonny</p> <p>Cette ann\u00e9e, nous allons utiliser Thonny, un logiciel sp\u00e9cialement con\u00e7u pour apprendre \u00e0 programmer en Python. C\u2019est un environnement de d\u00e9veloppement (appel\u00e9 IDE) qui facilite l\u2019\u00e9criture, l\u2019ex\u00e9cution et le test des programmes.</p> <p>Avec Thonny, on peut :</p> <ul> <li> <p>\u00e9crire du code Python dans une zone d\u2019\u00e9dition,</p> </li> <li> <p>lancer le programme en cliquant sur \u25b6,</p> </li> <li> <p>voir le r\u00e9sultat imm\u00e9diatement dans la console,</p> </li> <li> <p>utiliser des outils pratiques pour comprendre pas \u00e0 pas le d\u00e9roulement d\u2019un programme (mode pas-\u00e0-pas, visualisation des variables).</p> </li> </ul>"},{"location":"NSI_1/Programmation_Python/introductions_prog/#2-les-bases-de-python","title":"2. Les bases de Python","text":""},{"location":"NSI_1/Programmation_Python/introductions_prog/#21-les-variables","title":"2.1. Les variables","text":"<p>Une variable est comme une bo\u00eete qui permet de stocker une information pour pouvoir la r\u00e9utiliser plus tard dans un programme. Chaque variable a :</p> <ul> <li>un nom (choisi par le programmeur)</li> <li>une valeur (le contenu de la bo\u00eete)</li> </ul> <p>Exemple :</p> <pre><code>age = 16\nnom = \"Alice\"\npi = 3.14159\n</code></pre> <p>Explication :</p> <ul> <li><code>age</code> contient un nombre entier (<code>int</code>) \u2192 16</li> <li><code>nom</code> contient une cha\u00eene de caract\u00e8res (<code>str</code>) \u2192 \"Alice\"</li> <li><code>pi</code> contient un nombre d\u00e9cimal (<code>float</code>) \u2192 3.14159</li> </ul> <p>On peut afficher leur contenu gr\u00e2ce \u00e0 la fonction <code>print</code> :</p> <p>Exemple :</p> <pre><code>print(\"Bonjour\", nom, \"tu as\", age, \"ans.\")\n</code></pre> <p>R\u00e9sultat affich\u00e9 :</p> <pre><code>Bonjour Alice tu as 16 ans.\n</code></pre>"},{"location":"NSI_1/Programmation_Python/introductions_prog/#22-les-types-de-donnees-de-base","title":"2.2. Les types de donn\u00e9es de base","text":"<p>En Python, il existe diff\u00e9rents types de donn\u00e9es de base qui permettent de repr\u00e9senter des informations de nature diff\u00e9rente</p> <p>Exemple :</p> <ul> <li>int \u2192 nombres entiers (<code>5</code>, <code>2025</code>)</li> <li>float \u2192 nombres d\u00e9cimaux (<code>3.14</code>, <code>2.0</code>)</li> <li>str \u2192 texte (<code>\"Bonjour\"</code>, <code>'NSI'</code>)</li> <li>bool \u2192 vrai ou faux (<code>True</code>, <code>False</code>)</li> </ul> <p>il est possible de visualiser ces type a l'aide de <code>type(...)</code></p> <p>Exemple :</p> <ul> <li><code>type(5)</code> -&gt; <code>&lt;class \u2018int\u2019&gt;</code></li> <li><code>type(3.14)</code> -&gt; <code>&lt;class \u2018float\u2019&gt;</code></li> <li><code>type(\"Bonjour\")</code> -&gt; <code>&lt;class \u2018str\u2019&gt;</code></li> <li><code>type(True)</code> -&gt; <code>&lt;class \u2018bool\u2019&gt;</code></li> </ul> <p>Il est \u00e9galement possible de changer le type de certaines variables \u00e0 l\u2019aide de <code>str()</code> ou <code>int()</code>, par exemple.</p> <p>Exemple :</p> <ul> <li><code>int(\"5\")</code> -&gt; <code>5</code></li> <li><code>str(5)</code> -&gt; <code>\"5\"</code></li> </ul>"},{"location":"NSI_1/Programmation_Python/introductions_prog/#23-les-operateurs","title":"2.3. Les op\u00e9rateurs","text":"<p>Pour manipuler les nombres et effectuer des calculs en Python, on utilise des op\u00e9rateurs arithm\u00e9tiques.</p> <p>Exemple :</p> <pre><code>a = 10\nb = 3\nprint(a + b)  # addition -&gt; 10 + 3 = 13\nprint(a - b)  # soustraction -&gt; 10 - 3 = 7\nprint(a * b)  # multiplication -&gt; 10 * 3 = 30\nprint(a / b)  # division -&gt; 10 / 3 = 3,33333... \u26a0\ufe0f ici le resultat sera un float\nprint(a // b) # division enti\u00e8re -&gt; 10 // 3 = 3\nprint(a % b)  # reste de la division (modulo) -&gt; 10 // 3 = 1\nprint(a ** b) # puissance -&gt; 10 ** 3 = 1000\n</code></pre>"},{"location":"NSI_1/Programmation_Python/introductions_prog/#3-controler-le-deroulement-du-programme","title":"3. Contr\u00f4ler le d\u00e9roulement du programme","text":""},{"location":"NSI_1/Programmation_Python/introductions_prog/#31-les-conditions","title":"3.1. Les conditions","text":"<p>Une condition permet \u00e0 un programme de prendre une d\u00e9cision en fonction d\u2019une situation donn\u00e9e. L\u2019ordinateur teste une expression logique (par exemple <code>\u00e2ge &gt;= 18</code>) et choisit ensuite quel bloc d\u2019instructions ex\u00e9cuter.</p> <p>En Python, on utilise les mots-cl\u00e9s :</p> <ul> <li><code>if</code> \u2192 si la condition est vraie</li> <li><code>else</code> \u2192 sinon (si la condition est fausse)</li> <li><code>elif</code> \u2192 sinon si (autre condition \u00e0 v\u00e9rifier)</li> </ul> <p>Exemple :</p> <pre><code>age = 16\n\nif age &gt;= 18:\n    print(\"Majeur\")\nelse:\n    print(\"Mineur\")\n</code></pre> <p>Explication :</p> <ul> <li>On d\u00e9finit <code>age = 16</code>.</li> <li>Le programme v\u00e9rifie la condition <code>age &gt;= 18</code>.</li> <li>Comme 16 n\u2019est pas sup\u00e9rieur ou \u00e9gal \u00e0 18, la condition est fausse.</li> <li>L\u2019ordinateur ex\u00e9cute donc le bloc qui suit <code>else</code>.</li> </ul> <p>R\u00e9sultat affich\u00e9 :</p> <pre><code>Mineur\n</code></pre> <p>Exemple :</p> <pre><code>example = 14\n\nif example &gt;= 16:\n    print(\"Tr\u00e8s bien\")\nelif example &gt;= 12:\n    print(\"Assez bien\")\nelif example &gt;= 10:\n    print(\"Passable\")\nelse:\n    print(\"Insuffisant\")\n</code></pre> <p>Explication :</p> <ul> <li>Le programme teste d\u2019abord si la example est <code>&gt;= 16</code>. Ici <code>14 &gt;= 16</code> est faux.</li> <li>Ensuite il teste <code>example &gt;= 12</code>. Comme c\u2019est vrai, il affiche <code>\"Assez bien\"</code>.</li> <li>Les autres conditions ne sont pas v\u00e9rifi\u00e9es car une condition vraie a d\u00e9j\u00e0 \u00e9t\u00e9 trouv\u00e9e.</li> </ul> <p>R\u00e9sultat affich\u00e9 :</p> <pre><code>Assez bien\n</code></pre>"},{"location":"NSI_1/Programmation_Python/introductions_prog/#32-les-boucles","title":"3.2. Les boucles","text":"<p>Une boucle permet de r\u00e9p\u00e9ter automatiquement une s\u00e9rie d\u2019instructions sans avoir \u00e0 les r\u00e9\u00e9crire plusieurs fois. Elle est tr\u00e8s utile lorsque l\u2019on veut effectuer une m\u00eame action plusieurs fois (par exemple afficher les nombres de 1 \u00e0 10 ou r\u00e9p\u00e9ter un calcul).</p> <p>Deux types de boucles sont disponibles en Python : la boucle <code>while</code> et la boucle <code>for</code>.</p>"},{"location":"NSI_1/Programmation_Python/introductions_prog/#321-boucle-while-tant-que","title":"3.2.1. Boucle while (tant que)","text":"<p>La boucle while permet de r\u00e9p\u00e9ter une suite d\u2019instructions tant qu\u2019une condition est vraie. Autrement dit, l\u2019ordinateur v\u00e9rifie la condition au d\u00e9but de chaque tour de boucle :</p> <ul> <li>si la condition est vraie \u2192 il ex\u00e9cute les instructions,</li> <li>si la condition devient fausse \u2192 la boucle s\u2019arr\u00eate.</li> </ul> <p>Exemple :</p> <pre><code>i = 1\nwhile i &lt;= 5:\n    print(\"Compteur :\", i)\n    i = i + 1\n</code></pre> <p>Explication :</p> <ul> <li>On commence avec <code>i = 1</code>.</li> <li>La boucle s\u2019ex\u00e9cute tant que <code>i &lt;= 5</code>.</li> <li>\u00c0 chaque tour, le programme affiche la valeur de <code>i</code> puis ajoute 1 (<code>i = i + 1</code>).</li> <li>Quand <code>i</code> atteint 6, la condition <code>i &lt;= 5</code> devient fausse et la boucle s\u2019arr\u00eate.</li> </ul> <p>R\u00e9sultat affich\u00e9 :</p> <pre><code>Compteur : 1\nCompteur : 2\nCompteur : 3\nCompteur : 4\nCompteur : 5\n</code></pre>"},{"location":"NSI_1/Programmation_Python/introductions_prog/#322-boucle-for-pour","title":"3.2.2. Boucle for (pour)","text":"<p>La boucle for est utilis\u00e9e lorsqu\u2019on veut r\u00e9p\u00e9ter une suite d\u2019instructions un nombre de fois connu \u00e0 l\u2019avance ou lorsqu\u2019on veut parcourir les \u00e9l\u00e9ments d\u2019une liste.</p> <p>En Python, on utilise souvent la fonction <code>range()</code> pour g\u00e9n\u00e9rer une s\u00e9quence de nombres.</p> <p>Exemple :</p> <pre><code>for i in range(5):\n    print(\"Compteur :\", i)\n</code></pre> <p>Explication :</p> <ul> <li><code>range(5)</code> cr\u00e9e une s\u00e9quence de nombres allant de 0 \u00e0 4 (le 5 n\u2019est pas inclus).</li> <li>La boucle <code>for</code> va donc ex\u00e9cuter le bloc d\u2019instructions 5 fois.</li> <li>\u00c0 chaque tour, la variable <code>i</code> prend successivement les valeurs <code>0, 1, 2, 3, 4</code>.</li> <li>Le programme affiche donc la valeur de <code>i</code> \u00e0 chaque passage.</li> </ul> <p>R\u00e9sultat affich\u00e9 :</p> <pre><code>Compteur : 0\nCompteur : 1\nCompteur : 2\nCompteur : 3\nCompteur : 4\n</code></pre> <p>Exemple :</p> <p>Si on veut commencer \u00e0 1 et aller jusqu\u2019\u00e0 5 inclus, on peut \u00e9crire :</p> <pre><code>for i in range(1, 6):\n    print(\"Compteur :\", i)\n</code></pre> <p>R\u00e9sultat :</p> <pre><code>Compteur : 1\nCompteur : 2\nCompteur : 3\nCompteur : 4\nCompteur : 5\n</code></pre>"},{"location":"NSI_1/Programmation_Python/introductions_prog/#4-les-fonctions","title":"4. Les fonctions","text":"<p>Une fonction est un bloc de code qui r\u00e9alise une t\u00e2che pr\u00e9cise et que l\u2019on peut r\u00e9utiliser plusieurs fois dans un programme, sans avoir \u00e0 r\u00e9\u00e9crire les m\u00eames instructions.</p> <p>On peut comparer une fonction \u00e0 une machine :</p> <ul> <li>on lui donne une entr\u00e9e (des donn\u00e9es, appel\u00e9es param\u00e8tres),</li> <li>elle effectue un traitement (les instructions de la fonction),</li> <li>et elle renvoie une sortie (le r\u00e9sultat, gr\u00e2ce au mot-cl\u00e9 <code>return</code>).</li> </ul> <p>Exemple :</p> <pre><code>def carre(x):\n    return x * x\n\nprint(carre(5))  # Affiche 25\n</code></pre> <p>Explication :</p> <ul> <li>On d\u00e9finit une fonction appel\u00e9e <code>carre</code> avec le mot-cl\u00e9 <code>def</code>.</li> <li>Elle prend une entr\u00e9e : <code>x</code>.</li> <li>Elle renvoie le r\u00e9sultat de <code>x * x</code>.</li> <li>Lorsque l\u2019on appelle <code>carre(5)</code>, la fonction calcule <code>5 * 5</code> et retourne <code>25</code>.</li> </ul> <p>R\u00e9sultat affich\u00e9 :</p> <pre><code>25\n</code></pre>"},{"location":"NSI_1/Programmation_Python/introductions_prog/#avantages-des-fonctions","title":"Avantages des fonctions :","text":"<ul> <li>\u00c9viter de r\u00e9p\u00e9ter du code identique.</li> <li>Rendre un programme plus lisible et organis\u00e9.</li> <li>Faciliter la r\u00e9utilisation et la modification.</li> </ul>"},{"location":"NSI_1/Programmation_Python/mini-projet/","title":"\ud83d\udcdd Mini-projet : Jeu du Pendu en Python","text":""},{"location":"NSI_1/Programmation_Python/mini-projet/#objectif","title":"\ud83c\udfaf Objectif","text":"<p>Nous allons programmer le c\u00e9l\u00e8bre jeu du pendu en Python.</p> <p>Le principe est simple : un mot est choisi au hasard, et le joueur doit le deviner en proposant des lettres. \u00c0 chaque erreur, on ajoute un \u00e9l\u00e9ment du pendu. Le jeu s\u2019arr\u00eate si le joueur trouve toutes les lettres ou s\u2019il atteint le nombre maximum d\u2019erreurs.</p> <p>Dans ce TP, vous compl\u00e9terez les fonctions manquantes dans le fichier Python donn\u00e9, en respectant les consignes et en testant votre code.</p>"},{"location":"NSI_1/Programmation_Python/mini-projet/#organisation-des-fichiers","title":"Organisation des fichiers \ud83d\udcc2","text":"<p>Pour que votre projet fonctionne correctement, vous devez placer tous les fichiers dans un m\u00eame r\u00e9pertoire (dossier).  </p> <p>Les fichiers n\u00e9cessaires sont : - pendu.py : contient les fonctions que vous devez compl\u00e9ter. - pendu_dico.txt : dictionnaire de mots utilis\u00e9s pour le pendu.  </p> <p>\ud83d\udc49 Arborescence attendue :  </p> <pre><code>mon_projet_pendu/\n\u2502\n\u251c\u2500\u2500 pendu.py\n\u2514\u2500\u2500 pendu_dico.txt\n</code></pre>"},{"location":"NSI_1/Programmation_Python/mini-projet/#1-choix-dun-mot-aleatoire","title":"1. Choix d\u2019un mot al\u00e9atoire","text":"<p>La fonction suivante est d\u00e9j\u00e0 \u00e9crite :</p> <pre><code>def choix_mot(nom_fichier:str)-&gt;str:\n    \"\"\"\n    Fonction qui renvoie un mot du fichier texte source\n\n    Param\u00e8tre: nom_fichier : de type chaine de caract\u00e8re\n    Retour : str, un mot du fichier, de type chaine de caract\u00e8re\n    \"\"\"\n    with open(nom_fichier, \"r\") as myfile:\n        les_mots = myfile.readlines()   # les_mots : liste deslignes du fichier\n    longueur = len(les_mots)\n    nb = random.randint(1, longueur)\n    mot = les_mots[nb].strip()  # strip() pour supprimer le retour chariot\n    mot = \" \".join(mot)   # permet d'espacer les lettres\n    return mot\n</code></pre> <p>\ud83d\udc49 Dites, selon vous, ce que fait cette fonction en analysant rapidement son code.</p> <p>informations</p> <p>\u00c9crivez vos r\u00e9ponses directement dans le fichier python, juste apr\u00e8s <code># r\u00e9ponse</code>.</p>"},{"location":"NSI_1/Programmation_Python/mini-projet/#2-cacher-le-mot-avec-des-underscores","title":"2. Cacher le mot avec des underscores","text":"<p>On veut afficher un mot inconnu sous forme de tirets bas <code>_</code>, un par lettre.</p> Exemple: <pre><code>mot = \"C H A T\"\n\u2192 \"_ _ _ _\"\n</code></pre> <p>\ud83d\udc49 \u00c0 vous d\u2019\u00e9crire la fonction :</p> <pre><code>def cacher_mot(mot:str)-&gt;str:\n    \"\"\"\n    fonction qui renvoie une chaine d'underscores de la m\u00eame longueur que le param\u00e8tre mot\n\n    Param\u00e8tre:  mot, de type chaine de caract\u00e8re\n    Retour:  mot_inconnu: chaine de caract\u00e8re avec des \"_\"\n</code></pre> \ud83e\uddea Teste avec doctest : <pre><code>&gt;&gt;&gt; cacher_mot(\"P E N D U\")\n'_ _ _ _ _'\n&gt;&gt;&gt; cacher_mot(\"C H A T\")\n'_ _ _ _'\n</code></pre>"},{"location":"NSI_1/Programmation_Python/mini-projet/#3-verifier-si-une-lettre-est-presente","title":"3. V\u00e9rifier si une lettre est pr\u00e9sente","text":"<p>On veut une fonction qui renvoie <code>True</code> si une lettre est dans le mot, et <code>False</code> sinon.</p> <p>\ud83d\udc49 Compl\u00e8tez la fonction :</p> <pre><code>def verifier_lettre(mot:str, caractere:str)-&gt;str:\n    \"\"\"\n    fonction qui renvoie True si caractere est pr\u00e9sent dans mot\n\n    Param\u00e8tres: caractere, de type chaine de caract\u00e8re\n               mot, de type chaine de caract\u00e8re\n    Retour:  Bool\u00e9en, True si le caractere est dans le mot, False sinon\n</code></pre> \ud83e\uddea Teste avec doctest : <pre><code>&gt;&gt;&gt; verifier_lettre(\"P E N D U\", \"E\")\nTrue\n&gt;&gt;&gt; verifier_lettre(\"P E N D U\", \"A\")\nFalse\n</code></pre>"},{"location":"NSI_1/Programmation_Python/mini-projet/#4-reveler-une-lettre-trouvee","title":"4. R\u00e9v\u00e9ler une lettre trouv\u00e9e","text":"<p>Quand le joueur propose une lettre correcte, il faut la remplacer \u00e0 la bonne position dans le mot inconnu.</p> Exemple: <pre><code>mot         = \"P E N D U\"\nmot_inconnu = \"_ _ _ _ _\"\ncaractere   = \"E\"\n\u2192 mot_inconnu = \"_ E _ _ _\"\n</code></pre> <p>\ud83d\udc49 Compl\u00e8tez la fonction :</p> <pre><code>def lettre(mot:str, mot_inconnu:str,caractere:str)-&gt;str:\n    \"\"\"\n    Fonction qui affiche la lettre trouv\u00e9e \u00e0 la place de l'unduscore de mot_inconnu\n\n    Param\u00e8tre:  caractere, de type chaine de caract\u00e8re\n                mot_inconnu, de type chaine de caract\u00e8re\n                mot, de type chaine de caract\u00e8re\n    Retour:   mot_inconnu, de type chaine de caract\u00e8re\n</code></pre> \ud83e\uddea Teste avec doctest : <pre><code>&gt;&gt;&gt; lettre(\"P E N D U\", \"_ _ _ _ _\", \"E\")\n'_ E _ _ _'\n&gt;&gt;&gt; lettre(\"P E N D U\", \"_ _ _ _ _\", \"A\")\n'_ _ _ _ _'\n</code></pre>"},{"location":"NSI_1/Programmation_Python/mini-projet/#5-compter-les-erreurs","title":"5. Compter les erreurs","text":"<p>On a besoin d\u2019une fonction qui incr\u00e9mente le nombre d\u2019erreurs du joueur.</p> <p>\ud83d\udc49 Compl\u00e8tez la fonction :</p> <pre><code>def nb_erreur(erreur:int)-&gt;int:\n    \"\"\"\n    fonction qui comptabilise le nombre d'erreurs\n\n    Param\u00e8tre:     nb_erreur, de type int\n    Retour:     nb_erreur, de type int\n</code></pre> \ud83e\uddea Teste avec doctest : <pre><code>&gt;&gt;&gt; nb_erreur(5)\n6\n&gt;&gt;&gt; nb_erreur(0)\n1\n</code></pre>"},{"location":"NSI_1/Programmation_Python/mini-projet/#6-utilisation-de-linterface","title":"6. Utilisation de l\u2019interface \ud83c\udfae","text":"<p>Pour jouer, vous allez maintenant int\u00e9grer le fichier interface.py dans votre r\u00e9pertoire.</p> <p>Voici \u00e0 quoi doit ressembler votre r\u00e9pertoire apr\u00e8s avoir ajout\u00e9 le fichier : <pre><code>mon_projet_pendu/\n\u2502\n\u251c\u2500\u2500 pendu.py\n\u251c\u2500\u2500 interface.py\n\u2514\u2500\u2500 pendu_dico.txt\n</code></pre></p> <p>Ce fichier contient une fonction principale qui g\u00e8re l\u2019affichage et la saisie.  </p> <p>Pour d\u00e9marrer le jeu, ex\u00e9cutez le fichier <code>interface.py</code>.</p> <p>\ud83d\udc49 Question 3 : Selon vous, \u00e0 quoi sert l\u2019interface dans ce projet ?  </p> <p>\ud83d\udc49 Question 4 : Quelles sont les informations qui doivent \u00eatre envoy\u00e9es par <code>pendu.py</code> vers <code>interface.py</code> ?  </p>"},{"location":"NSI_1/Programmation_Python/mini-projet/#pour-aller-plus-loin","title":"Pour aller plus loin","text":"<p>\ud83d\udc49 Cr\u00e9ez votre propre interface console dans le fichier <code>pendu.py</code>. L'affichage doit \u00eatre mis \u00e0 jour et affich\u00e9 \u00e0 chaque saisie de lettre.</p> Exemple: <pre><code>Mot \u00e0 trouver : _ _ _ _\nNombre d\u2019erreurs : 3\nQuelle est votre lettre ? ...\n</code></pre> <p>Ici, <code>_</code> repr\u00e9sente les lettres non trouv\u00e9es et la zone apr\u00e8s le <code>?</code> attend la lettre saisie par l'utilisateur.</p> Exemple:"},{"location":"NSI_1/Programmation_Python/mini-projet/#exemple-quand-le-joueur-perd-6-erreurs","title":"Exemple quand le joueur perd (6 erreurs):","text":"<pre><code>Mot \u00e0 trouver : _ _ _ _\nNombre d\u2019erreurs : 6\nQuelle est votre lettre ? x\n\nDommage ! Vous avez perdu.\nLe mot \u00e9tait : CHAT\n</code></pre>"},{"location":"NSI_1/Programmation_Python/mini-projet/#exemple-quand-le-joueur-gagne","title":"Exemple quand le joueur gagne :","text":"<pre><code>Mot \u00e0 trouver : C H A _\nNombre d\u2019erreurs : 2\nQuelle est votre lettre ? T\n\nBravo ! Vous avez trouv\u00e9 le mot : CHAT\n</code></pre>"},{"location":"NSI_1/Programmation_Python/sommaire/","title":"\ud83d\udc0d Programmation Python","text":""},{"location":"NSI_1/Programmation_Python/sommaire/#cours","title":"Cours","text":"<ul> <li>introduction \u00e0 la programmation</li> </ul>"},{"location":"NSI_1/Programmation_Python/sommaire/#exercices","title":"Exercices","text":"<ul> <li>exercices</li> <li>mini-projet</li> <li>exercices 2</li> <li>exercices 3</li> </ul>"},{"location":"NSI_1/Programmation_Python/sommaire/#interrogations","title":"Interrogations","text":"<ul> <li>interrogation</li> <li>correction interrogation</li> </ul>"},{"location":"NSI_1/Programmation_Python/sommaire/#fiche-memo","title":"Fiche m\u00e9mo","text":"<ul> <li>fiche m\u00e9mo</li> </ul>"},{"location":"NSI_1/Programmation_Python/interrogation/intero_corec/","title":"\u2705 Correction de l\u2019\u00e9valuation","text":""},{"location":"NSI_1/Programmation_Python/interrogation/intero_corec/#premier-exercice","title":"Premier exercice","text":"1. Comment s\u2019appellent les diff\u00e9rentes fonctions d\u00e9clar\u00e9es ici ? <p>Elles s\u2019appellent : <code>mystere_1</code>, <code>mystere_2</code>, <code>mystere_3</code>.</p> 2. Quels sont les param\u00e8tres de ces fonctions ? <p>Chaque fonction a deux param\u00e8tres : <code>a</code> et <code>b</code>.</p> 3. De quel type sont ces param\u00e8tres ? <p>Les deux param\u00e8tres <code>a</code> et <code>b</code> sont de type <code>int</code> (entier).</p> 4. De quel type seront les r\u00e9sultats de ces fonctions ? <p>Toutes les fonctions renvoient un entier (<code>int</code>).</p> 5. Pour chaque fonction, indiquer ce qui est stock\u00e9 dans la variable <code>resultat</code> \u00e0 la premi\u00e8re ligne. <ul> <li><code>mystere_1</code> : <code>resultat = a</code></li> <li><code>mystere_2</code> : <code>resultat = 0</code></li> <li><code>mystere_3</code> : <code>resultat = a</code></li> </ul> 6. Pour chaque fonction, quelle est la condition pour que la boucle <code>while</code> s\u2019arr\u00eate ? <p>La boucle <code>while</code> s\u2019arr\u00eate lorsque <code>b == 0</code>.</p> 7. Pour chaque fonction, comment \u00e9volue la variable <code>resultat</code> \u00e0 chaque it\u00e9ration ? <ul> <li><code>mystere_1</code> : on ajoute 1 \u00e0 <code>resultat</code> \u00e0 chaque tour.</li> <li><code>mystere_2</code> : on ajoute a \u00e0 <code>resultat</code> \u00e0 chaque tour.</li> <li><code>mystere_3</code> : on multiplie <code>resultat</code> par a \u00e0 chaque tour.</li> </ul> 8. Compl\u00e9ter le tableau a b Fonction R\u00e9sultat attendu 2 3 mystere_1 5 (car 2+3) 2 3 mystere_2 6 (car 2\u00d73) 2 3 mystere_3 16 (car 2^4) 5 0 mystere_1 5 5 0 mystere_2 0 5 0 mystere_3 5 9. Finalement, que font ces fonctions ? <ul> <li><code>mystere_1(a,b)</code> \u2192 calcule a + b</li> <li><code>mystere_2(a,b)</code> \u2192 calcule a \u00d7 b</li> <li><code>mystere_3(a,b)</code> \u2192 calcule a puissance (b+1), c\u2019est-\u00e0-dire a^(b+1)</li> </ul>"},{"location":"NSI_1/Programmation_Python/interrogation/intero_corec/#deuxieme-exercice","title":"Deuxi\u00e8me exercice","text":"<pre><code>def recherche(texte: str, caractere: str) -&gt; int | bool:\n    i = 0\n    while i &lt; len(texte):\n        if texte[i] == caractere:\n            return i\n        i += 1\n    return False\n</code></pre> <p>\u2705 V\u00e9rification :</p> <pre><code>print(recherche(\"bonjour\", \"b\"))  # 0\nprint(recherche(\"bonjour\", \"o\"))  # 1\nprint(recherche(\"bonjour\", \"i\"))  # False\n</code></pre>"},{"location":"NSI_1/Programmation_Python/interrogation/intero_corec/#troisieme-exercice","title":"Troisi\u00e8me exercice","text":"<pre><code>def inverse(mot: str) -&gt; str:\n    resultat = \"\"\n    for lettre in mot:\n        resultat = lettre + resultat  # on ajoute la lettre au d\u00e9but\n    return resultat\n\n# Tests\nprint(inverse(\"NSI\"))     # \"ISN\"\nprint(inverse(\"kayak\"))   # \"kayak\"\n</code></pre>"},{"location":"NSI_1/Programmation_Python/interrogation/intero_corec/#quatrieme-exercice","title":"Quatri\u00e8me exercice","text":"<pre><code>def moyenne():\n    note = float(input(\"Entrez une note entre 0 et 20 : \"))\n\n    if note &lt; 0 or note &gt; 20:\n        return(\"Erreur : la note doit \u00eatre comprise entre 0 et 20.\")\n    elif note &gt;= 16:\n        return(\"Tr\u00e8s bien\")\n    elif note &gt;= 12:\n        return(\"Assez bien\")\n    elif note &gt;= 10:\n        return(\"Passable\")\n    else:\n        return(\"Insuffisant\")\n</code></pre>"},{"location":"NSI_1/Programmation_Python/interrogation/interrogation/","title":"\u00c9valuation","text":""},{"location":"NSI_1/Programmation_Python/interrogation/interrogation/#premier-exercice","title":"Premier exercice","text":"<p>On donne trois fonctions appel\u00e9es ici <code>mystere_1</code>, <code>mystere_2</code> et <code>mystere_3</code> :</p> <pre><code>def mystere_1(a: int, b: int) -&gt; int:\n    resultat = a\n    while b != 0:\n        resultat = resultat + 1\n        b = b - 1\n    return resultat\n\ndef mystere_2(a: int, b: int) -&gt; int:\n    resultat = 0\n    while b != 0:\n        resultat = resultat + a\n        b = b - 1\n    return resultat\n\ndef mystere_3(a: int, b: int) -&gt; int:\n    resultat = a\n    while b != 0:\n        resultat = resultat * a\n        b = b - 1\n    return resultat\n</code></pre> <ol> <li>Comment s\u2019appellent les diff\u00e9rentes fonctions d\u00e9clar\u00e9es ici ?</li> <li>Quels sont les param\u00e8tres de ces fonctions ?</li> <li>De quel type sont ces param\u00e8tres ?</li> <li>De quel type seront les r\u00e9sultats de ces fonctions ?</li> <li>Pour chaque fonction, indiquer ce qui est stock\u00e9 dans la variable <code>resultat</code> \u00e0 la premi\u00e8re ligne.</li> <li>Pour chaque fonction, quelle est la condition pour que la boucle <code>while</code> s\u2019arr\u00eate ?</li> <li>Pour chaque fonction, comment \u00e9volue la variable <code>resultat</code> \u00e0 chaque it\u00e9ration (tour) de la boucle ?</li> <li>Compl\u00e9ter le tableau suivant pour chaque fonction avec les cas propos\u00e9s :</li> </ol> a b Fonction r\u00e9sultat attendu 2 3 mystere_1 ? 2 3 mystere_2 ? 2 3 mystere_3 ? 5 0 mystere_1 ? 5 0 mystere_2 ? 5 0 mystere_3 ? <ol> <li>Finalement, que font ces fonctions (donner leur vrai r\u00f4le math\u00e9matique) ?</li> </ol>"},{"location":"NSI_1/Programmation_Python/interrogation/interrogation/#deuxieme-exercice","title":"Deuxi\u00e8me exercice","text":"<p>Compl\u00e9ter la fonction suivante qui renvoie la position d\u2019un caract\u00e8re (mis en param\u00e8tre) dans un texte (\u00e9galement mis en param\u00e8tre).</p> <p>\u26a0\ufe0f Contraintes :</p> <ul> <li>Vous ne devez pas utiliser <code>in</code>, <code>find</code> ou toute autre fonction Python d\u00e9j\u00e0 existante pour rechercher dans une cha\u00eene.</li> <li>Si le caract\u00e8re est pr\u00e9sent plusieurs fois, on renvoie uniquement la premi\u00e8re position.</li> <li>ne pas recopier la documentation</li> </ul> <pre><code>def recherche(texte: str, caractere: str) -&gt; int | bool:\n    \"\"\"\n    Renvoie l\u2019indice de la premi\u00e8re occurrence de `caractere` dans `texte` s\u2019il est pr\u00e9sent,\n    sinon renvoie False.\n\n    Param\u00e8tres :\n        texte : str, une cha\u00eene de caract\u00e8res\n        caractere : str, un caract\u00e8re \u00e0 trouver\n\n    R\u00e9sultat :\n        int | bool : l\u2019indice du caract\u00e8re dans le texte s\u2019il est pr\u00e9sent, sinon False\n\n    Exemples :\n    &gt;&gt;&gt; recherche(\"bonjour\", \"b\")\n    0\n    &gt;&gt;&gt; recherche(\"bonjour\", \"o\")\n    1\n    &gt;&gt;&gt; recherche(\"bonjour\", \"i\")\n    False\n    \"\"\"\n</code></pre>"},{"location":"NSI_1/Programmation_Python/interrogation/interrogation/#troisieme-exercice","title":"Troisi\u00e8me exercice","text":"<p>\u00c9crire une fonction qui renvoie un mot invers\u00e9 sans utiliser <code>mot[::-1]</code> ni la fonction <code>reverse()</code>.</p> <pre><code>def inverse(mot):\n    # r\u00e9ponse \u00e0 compl\u00e9ter\n\n# Quelques tests\nprint(inverse(\"NSI\"))     # attendu : \"ISN\"\nprint(inverse(\"kayak\"))   # attendu : \"kayak\"\n</code></pre>"},{"location":"NSI_1/Programmation_Python/interrogation/interrogation/#quatrieme-exercice","title":"Quatri\u00e8me exercice","text":"<p>\u00c9crire une fonction <code>moyenne</code> qui demande une note (avec <code>input</code>) \u00e0 l\u2019utilisateur et renvoie :</p> <ul> <li><code>\"Tr\u00e8s bien\"</code> si la note \u2265 16</li> <li><code>\"Assez bien\"</code> si la note \u2265 12</li> <li><code>\"Passable\"</code> si la note \u2265 10</li> <li><code>\"Insuffisant\"</code> sinon</li> </ul> <p>\u26a0\ufe0f Contraintes et pr\u00e9cisions :</p> <ul> <li>La note est comprise entre 0 et 20.</li> <li>Bonus : am\u00e9liorer le programme pour que la note puisse \u00eatre un nombre d\u00e9cimal (par exemple <code>12.5</code>).</li> <li>Bonus : afficher un message d\u2019erreur si la note saisie est en dehors de l\u2019intervalle [0,20].</li> </ul>"},{"location":"NSI_1/Programmation_Python/interrogation_2/interrogation/","title":"Interrogation","text":""},{"location":"NSI_1/Programmation_Python/interrogation_2/interrogation/#premier-exercice-etude-de-code","title":"Premier exercice \u2014 \u00c9tude de code","text":"<p>On donne trois fonctions nomm\u00e9es <code>mystere_a</code>, <code>mystere_b</code> et <code>mystere_c</code> :</p> <pre><code>def mystere_a(n: int) -&gt; int:\n    total = 0\n    i = 1\n    while i &lt;= n:\n        total = total + i\n        i = i + 1\n    return total\n\ndef mystere_b(n: int) -&gt; int:\n    resultat = 1\n    i = 1\n    while i &lt;= n:\n        resultat = resultat * i\n        i = i + 1\n    return resultat\n\ndef mystere_c(texte: str) -&gt; str:\n    resultat = \"\"\n    i = 0\n    while i &lt; len(texte):\n        if i % 2 == 0:\n            resultat = resultat + texte[i]\n        else:\n            resultat = resultat + \"-\"\n        i = i + 1\n    return resultat\n</code></pre>"},{"location":"NSI_1/Programmation_Python/interrogation_2/interrogation/#questions","title":"Questions","text":"<ol> <li>Comment s\u2019appellent les trois fonctions ?</li> <li>Quels sont les param\u00e8tres de chacune d\u2019elles ?</li> <li>De quel type sont ces param\u00e8tres ?</li> <li>De quel type sont les valeurs renvoy\u00e9es ?</li> <li>Que contient la variable <code>total</code> ou <code>resultat</code> \u00e0 la premi\u00e8re ligne de chaque fonction ?</li> <li>Quelle est la condition d\u2019arr\u00eat des boucles <code>while</code> ?</li> <li>Comment \u00e9volue la variable <code>i</code> \u00e0 chaque tour de boucle ?</li> <li>Compl\u00e9ter le tableau suivant pour comprendre le fonctionnement de chaque fonction :</li> </ol> Entr\u00e9e Fonction R\u00e9sultat attendu 5 mystere_a ? 4 mystere_b ? \"bonjour\" mystere_c ? <ol> <li> <p>D\u00e9crire en une phrase le r\u00f4le de chaque fonction :</p> </li> <li> <p><code>mystere_a</code> : \u2026</p> </li> <li><code>mystere_b</code> : \u2026</li> <li><code>mystere_c</code> : \u2026 Parfait \ud83d\udc4d Voici la version \u00e9l\u00e8ve de ton exercice 2, sans les questions, directement pr\u00eate \u00e0 \u00eatre donn\u00e9e telle quelle. Le format reste coh\u00e9rent avec ton \u00e9valuation pr\u00e9c\u00e9dente.</li> </ol>"},{"location":"NSI_1/Programmation_Python/interrogation_2/interrogation/#deuxieme-exercice-parcour-dune-chaine-de-caractere","title":"Deuxi\u00e8me exercice - Parcour d'une chaine de caract\u00e9re","text":"<p>Compl\u00e9ter la fonction suivante qui renvoie le nombre de voyelles contenues dans un mot donn\u00e9.</p> <p>\u26a0\ufe0f Contraintes :</p> <ul> <li>Vous ne devez pas utiliser <code>count()</code> ou <code>in</code>.</li> <li>Vous devez parcourir la cha\u00eene caract\u00e8re par caract\u00e8re avec une boucle <code>for</code>.</li> <li>On consid\u00e8re comme voyelles : <code>a, e, i, o, u, y</code> (en minuscules uniquement).</li> </ul> <pre><code>def compter_voyelles(mot: str) -&gt; int:\n    \"\"\"\n    Renvoie le nombre de voyelles contenues dans le mot.\n\n    Param\u00e8tres :\n        mot : str, une cha\u00eene de caract\u00e8res\n\n    R\u00e9sultat :\n        int : le nombre de voyelles pr\u00e9sentes dans le mot\n\n    Exemples :\n    &gt;&gt;&gt; compter_voyelles(\"bonjour\")\n    3\n    &gt;&gt;&gt; compter_voyelles(\"informatique\")\n    6\n    &gt;&gt;&gt; compter_voyelles(\"rhythme\")\n    1\n    \"\"\"\n</code></pre>"},{"location":"NSI_1/Programmation_Python/interrogation_2/interrogation/#troisieme-exercice-parcour-dune-chaine-de-caractere","title":"Troisi\u00e8me exercice - Parcour d'une chaine de caract\u00e9re","text":"<p>\u00c9crire une fonction qui renvoie une cha\u00eene o\u00f9 chaque caract\u00e8re du mot donn\u00e9 est r\u00e9p\u00e9t\u00e9 deux fois de suite, sans utiliser de compr\u00e9hension de liste ni de fonction Python avanc\u00e9e.</p> <pre><code>def double_caracteres(mot: str) -&gt; str:\n    \"\"\"\n    Renvoie une nouvelle cha\u00eene o\u00f9 chaque caract\u00e8re du mot est r\u00e9p\u00e9t\u00e9 deux fois.\n\n    Param\u00e8tres :\n        mot : str, une cha\u00eene de caract\u00e8res\n\n    R\u00e9sultat :\n        str : une nouvelle cha\u00eene contenant chaque caract\u00e8re du mot r\u00e9p\u00e9t\u00e9 deux fois\n\n    Exemples :\n    &gt;&gt;&gt; double_caracteres(\"NSI\")\n    'NNSSII'\n    &gt;&gt;&gt; double_caracteres(\"test\")\n    'tteesstt'\n    &gt;&gt;&gt; double_caracteres(\"abc\")\n    'aabbcc'\n    \"\"\"\n</code></pre>"},{"location":"NSI_1/Programmation_Python/interrogation_2/interrogation/#quatrieme-exercice-conditions","title":"Quatri\u00e8me exercice - Conditions","text":"<p>Compl\u00e9ter la fonction suivante qui renvoie un message en fonction de la temp\u00e9rature donn\u00e9e (en degr\u00e9s Celsius).</p> <p>\u26a0\ufe0f Contraintes et pr\u00e9cisions :</p> <ul> <li>La temp\u00e9rature est un nombre (entier ou d\u00e9cimal).</li> <li>Utilisez uniquement des structures conditionnelles (<code>if</code>, <code>elif</code>, <code>else</code>).</li> </ul> <pre><code>def meteo_message(temp: int) -&gt; str:\n    \"\"\"\n    Renvoie un message en fonction de la temp\u00e9rature.\n\n    Param\u00e8tres :\n        temp : int, la temp\u00e9rature en degr\u00e9s Celsius\n\n    R\u00e9sultat :\n        str : un message correspondant \u00e0 la temp\u00e9rature\n\n    R\u00e8gles :\n        - temp &lt; 0      \u2192 \"Il g\u00e8le !\"\n        - 0 \u2264 temp &lt; 10 \u2192 \"Il fait froid.\"\n        - 10 \u2264 temp &lt; 25 \u2192 \"Temp\u00e9rature agr\u00e9able.\"\n        - temp \u2265 25     \u2192 \"Il fait chaud !\"\n\n    Exemples :\n    &gt;&gt;&gt; meteo_message(-3)\n    \"Il g\u00e8le !\"\n    &gt;&gt;&gt; meteo_message(8)\n    \"Il fait froid.\"\n    &gt;&gt;&gt; meteo_message(18)\n    \"Temp\u00e9rature agr\u00e9able.\"\n    &gt;&gt;&gt; meteo_message(30)\n    \"Il fait chaud !\"\n    \"\"\"\n</code></pre>"},{"location":"NSI_1/Programmation_Python/interrogation_2/interrogation/#bonus-amelioration-du-programme","title":"\ud83c\udf1f Bonus : am\u00e9lioration du programme","text":"<p>Am\u00e9liorer la fonction <code>meteo_message</code> pour la rendre plus compl\u00e8te et interactive :</p> <ol> <li>Demander la temp\u00e9rature \u00e0 l\u2019utilisateur avec <code>input</code>.</li> <li>Accepter les valeurs d\u00e9cimales (exemple : <code>12.5</code>).</li> </ol>"},{"location":"NSI_1/type_et_valeur_de_base/base/","title":"Nombres binaires et hexad\u00e9cimaux","text":""},{"location":"NSI_1/type_et_valeur_de_base/base/#introduction-a-la-numeration-binaire","title":"Introduction \u00e0 la num\u00e9ration binaire","text":"<p>La num\u00e9ration binaire est un syst\u00e8me qui utilise seulement deux symboles : 0 et 1.</p> <p>Contrairement \u00e0 notre syst\u00e8me habituel en base 10 (d\u00e9cimal), qui utilise dix chiffres allant de 0 \u00e0 9, la base 2 est le langage fondamental des ordinateurs.</p> <p>Dans ce syst\u00e8me, chaque chiffre correspond \u00e0 une puissance de deux. Cela permet de repr\u00e9senter n\u2019importe quel nombre uniquement avec des suites de 0 et de 1.</p> <p>Histoire</p> <p>L\u2019id\u00e9e du binaire remonte au XVII\u1d49 si\u00e8cle gr\u00e2ce au philosophe et math\u00e9maticien Gottfried Wilhelm Leibniz. Il a montr\u00e9 que tous les nombres pouvaient \u00eatre exprim\u00e9s \u00e0 l\u2019aide de seulement deux symboles.</p> <p>Aujourd\u2019hui, le binaire est indispensable en informatique, car les circuits \u00e9lectroniques ne reconnaissent que deux \u00e9tats : \u00ab allum\u00e9 \u00bb (1) ou \u00ab \u00e9teint \u00bb (0).  </p> <p>Gr\u00e2ce \u00e0 cette simplicit\u00e9, les ordinateurs peuvent effectuer des calculs tr\u00e8s complexes et stocker des informations num\u00e9riques.  </p>"},{"location":"NSI_1/type_et_valeur_de_base/base/#definition","title":"D\u00e9finition","text":"<p>Base : La base d\u2019un syst\u00e8me de num\u00e9ration est le nombre de symboles diff\u00e9rents qu\u2019il utilise pour \u00e9crire les nombres.</p> <p>Autres bases utilis\u00e9es</p> <p>Base 60 \u2013 Temps:</p> <p>Le temps est bas\u00e9 sur la num\u00e9ration en 60 : une heure est divis\u00e9e en 60 minutes, et une minute en 60 secondes. Ce choix vient des Babyloniens, qui comptaient avec un syst\u00e8me sexag\u00e9simal. Cela rendait les calculs de dur\u00e9es plus faciles \u00e0 l\u2019\u00e9poque.</p> <p>Base 12 \u2013 Douzaines:</p> <p>Les douzaines (par exemple, les bo\u00eetes de 12 \u0153ufs) viennent d\u2019un usage ancien. On pouvait compter jusqu\u2019\u00e0 12 en utilisant les phalanges des doigts d\u2019une main, en se servant du pouce pour les pointer.</p>"},{"location":"NSI_1/type_et_valeur_de_base/base/#base-10","title":"Base 10","text":"<p>Pour mieux comprendre le principe de la base 2, il est utile de rappeler le fonctionnement du syst\u00e8me d\u00e9cimal que nous utilisons au quotidien.</p> <p>En base 10, chaque chiffre d\u2019un nombre repr\u00e9sente une puissance de dix.</p> <p>Exemple</p> <p>Le nombre 347 peut \u00eatre d\u00e9compos\u00e9 ainsi :  </p> <p> </p> <p>Ici, le chiffre 3 repr\u00e9sente trois centaines, le chiffre 4 repr\u00e9sente quatre dizaines et le chiffre 7 repr\u00e9sente sept unit\u00e9s.  </p> <p>Exercice</p> <p>D\u00e9composez les nombres suivants :  </p> <ul> <li>1235  </li> <li>1002  </li> <li>0001  </li> </ul> <p>On note l\u2019ensemble des chiffres disponibles en base 10 de la fa\u00e7on suivante :</p> <p> </p>"},{"location":"NSI_1/type_et_valeur_de_base/base/#base-2","title":"Base 2","text":"<p>La base 2 est compos\u00e9e, comme indiqu\u00e9 pr\u00e9c\u00e9demment, de 2 chiffres :</p> <p> </p> <p>Gr\u00e2ce \u00e0 la base 2, il est possible de repr\u00e9senter l\u2019ensemble des entiers naturels. Le principe est le m\u00eame qu\u2019en base 10 :</p> <ul> <li>En base 10, lorsque le chiffre des unit\u00e9s vaut 9 et que l\u2019on ajoute 1, il faut remettre le chiffre des unit\u00e9s \u00e0 0, puis ajouter 1 au chiffre des dizaines.</li> <li>Si le chiffre des dizaines vaut \u00e9galement 9, il faut lui aussi \u00eatre remis \u00e0 0 et ajouter 1 au chiffre des centaines, et ainsi de suite.</li> </ul> <p>Exemple</p> <p>Si je veux conna\u00eetre le nombre qui suit 399, je dois commencer par ajouter 1 au chiffre des dizaines et remettre celui des unit\u00e9s \u00e0 0.</p> <p>Ici, le chiffre des dizaines vaut aussi 9, donc il faut ajouter 1 au chiffre des centaines, puis remettre le chiffre des dizaines \u00e0 0.  </p> <p>Ainsi, on obtient 400.  </p> <p>En base 2, on utilise exactement le m\u00eame principe.</p> <p>Comme il n\u2019y a que deux chiffres possibles (0 et 1), d\u00e8s que l\u2019on atteint 1 dans une position et que l\u2019on ajoute 1, on remet ce chiffre \u00e0 0 et on reporte 1 sur la position suivante.</p> <ul> <li>Par exemple, si le chiffre des unit\u00e9s est 1 et que l\u2019on ajoute 1, il devient 0, et l\u2019on ajoute 1 au chiffre des \u00ab dizaines \u00bb (en r\u00e9alit\u00e9, la deuxi\u00e8me position en base 2).</li> <li>Si ce chiffre vaut lui aussi 1, il devient 0 et on ajoute 1 \u00e0 la position suivante, et ainsi de suite.</li> </ul> <p>Exemple</p> <p>Si je veux conna\u00eetre le nombre qui suit 10011, je dois commencer par ajouter 1 au chiffre des unit\u00e9s. </p> <p>Comme il vaut d\u00e9j\u00e0 1, je le remets \u00e0 0 et j\u2019ajoute 1 au chiffre suivant.  </p> <p>Or, ce chiffre vaut lui aussi 1, donc je le remets \u00e0 0 et j\u2019ajoute 1 au chiffre suivant.  </p> <p>Ainsi, j\u2019obtiens 10100.  </p> <p>Exercice</p> <p>\u00c9crire les nombres de 0 \u00e0 15 en utilisant la base 2.  </p> <p>Exercice</p> <p>Donner le nombre qui suit chacun des nombres suivants :  </p> <ul> <li>1011  </li> <li>1111  </li> <li>1110</li> <li>1011111</li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/base/#passage-de-la-base-2-a-la-base-10","title":"Passage de la base 2 \u00e0 la base 10","text":"<p>Pour convertir un nombre \u00e9crit en base 10 vers la base 2, on utilise une d\u00e9composition en puissances de 2.</p> <p>Exemple</p> <p>Prenons un nombre binaire, par exemple 1011.  </p> <p>On peut le d\u00e9composer ainsi :  </p> <p> </p> <p>En effectuant le calcul, on obtient :  </p> <p> </p> <p>Donc 1011 en base 2 correspond \u00e0 11 en base 10.  </p> <p>Exercice</p> <p>D\u00e9composer les nombres binaires suivants en base 10 :  </p> <ul> <li>1010  </li> <li>11011  </li> <li>0011  </li> <li>1001001101  </li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/base/#passage-de-la-base-10-a-la-base-2","title":"Passage de la base 10 \u00e0 la base 2","text":"<p>Pour convertir un nombre \u00e9crit en base 10 vers la base 2, on utilise ce que l\u2019on appelle la m\u00e9thode des divisions successives.</p> <p>Exemple</p> <p>Soit le nombre <code>22</code> en base 10. Nous voulons le convertir en base 2.  </p> <p>On commence par diviser le nombre par 2 en utilisant la division euclidienne :  </p> <p> </p> <p>On recommence l\u2019op\u00e9ration en prenant le quotient comme nouveau dividende :  </p> <p> </p> <p>Puis on continue jusqu\u2019\u00e0 ce que le quotient soit \u00e9gal \u00e0 0 :  </p> <p> </p> <p>Une fois termin\u00e9, on conserve les restes obtenus en remontant les \u00e9tapes de bas en haut :  </p> <p> </p> <p>On obtient donc :  </p> <p> </p> <p>Exercice</p> <p>Convertir en base 2 les nombres suivants (\u00e9crits en base 10) :  </p> <ul> <li>6  </li> <li>16  </li> <li>31  </li> <li>42  </li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/base/#exercice-pratique","title":"Exercice pratique","text":"<p>Exercice pratique</p> <ol> <li>Compl\u00e9ter la fonction suivante :  </li> </ol> <pre><code>def bin_to_dec(nombre: str) -&gt; int:\n    \"\"\"\n    Cette fonction transforme un nombre binaire (en cha\u00eene de caract\u00e8res)\n    en sa repr\u00e9sentation en base 10.\n    \"\"\"\n</code></pre> <pre><code>Indice : utiliser le parcours de cha\u00eene de caract\u00e8res vu pr\u00e9c\u00e9demment.\n</code></pre> <ol> <li>Compl\u00e9ter la fonction suivante :  </li> </ol> <pre><code>def dec_to_bin(nombre: int) -&gt; str:\n    \"\"\"\n    Cette fonction transforme un nombre entier en base 10\n    en sa repr\u00e9sentation en base 2 (cha\u00eene de caract\u00e8res).\n    \"\"\"\n</code></pre>"},{"location":"NSI_1/type_et_valeur_de_base/base/#base-16","title":"base 16","text":"<p>En informatique, une autre base tr\u00e8s importante est la base hexad\u00e9cimale (ou hex). Cette base repr\u00e9sente les nombres avec 16 symboles.</p> <p>Cette base est tr\u00e8s utile pour divers usages notamment :</p> <ul> <li>La repr\u00e9sentation d'adresse m\u00e9moire</li> <li>La repr\u00e9sentation des couleurs</li> </ul> <p>On peut noter cette base : </p> <p> </p>"},{"location":"NSI_1/type_et_valeur_de_base/base/#table-de-correspondance-entre-hexadecimal-et-decimal","title":"Table de correspondance entre hexad\u00e9cimal et d\u00e9cimal","text":"Hex Dec Hex Dec 0 0 8 8 1 1 9 9 2 2 A 10 3 3 B 11 4 4 C 12 5 5 D 13 6 6 E 14 7 7 F 15"},{"location":"NSI_1/type_et_valeur_de_base/base/#passage-de-la-base-10-a-la-base-16","title":"Passage de la base 10 \u00e0 la base 16","text":"<p>On va utiliser, une nouvelle fois, la m\u00e9thode des divisions successives, mais cette fois-ci en divisant par 16 et non plus par 2.</p> <p>Exemple</p> <p>Soit le nombre <code>356</code> en base 10. Nous voulons le convertir en base 16.  </p> <p>On commence par diviser le nombre par 16 en utilisant la division euclidienne :  </p> <p> </p> <p>On recommence l\u2019op\u00e9ration en prenant le quotient comme nouveau dividende :  </p> <p> </p> <p>Puis on continue jusqu\u2019\u00e0 ce que le quotient soit \u00e9gal \u00e0 0 :  </p> <p> </p> <p>Une fois termin\u00e9, on conserve les restes obtenus en remontant les \u00e9tapes de bas en haut :  </p> <p> </p> <p>On obtient donc :  </p> <p> </p> <p>Exercice</p> <p>Convertir en base 16 les nombres suivants (\u00e9crits en base 10) :  </p> <ul> <li>12</li> <li>25</li> <li>31  </li> <li>42  </li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/base/#passage-de-la-base-16-a-la-base-10","title":"Passage de la base 16 \u00e0 la base 10","text":"<p>Pour convertir un nombre \u00e9crit en base 16 vers la base 10, on utilise une d\u00e9composition en puissances de 16, exactement comme on l\u2019a fait pour la base 2 avec les puissances de 2.</p> <p>Chaque chiffre hexad\u00e9cimal est remplac\u00e9 par sa valeur d\u00e9cimale (en utilisant le tableau de correspondance vu pr\u00e9c\u00e9demment), puis multipli\u00e9 par la puissance de 16 correspondant \u00e0 sa position.</p> <p>Exemple</p> <p>Soit le nombre <code>2F</code> en base 16. Nous voulons le convertir en base 10.  </p> <p>On d\u00e9compose le nombre :  </p> <p> </p> <p>Comme <code>F</code> correspond \u00e0 15 en d\u00e9cimal, on obtient :  </p> <p> </p> <p>Donc :  </p> <p> </p> <p>Exercice</p> <p>Convertir en base 10 les nombres hexad\u00e9cimaux suivants :  </p> <ul> <li>A  </li> <li>1C  </li> <li>3F  </li> <li>7B  </li> <li>FF  </li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/base/#exercice-pratique_1","title":"Exercice pratique","text":"<p>Exercice pratique</p> <ol> <li>Compl\u00e9ter la fonction suivante :  </li> </ol> <pre><code>def hex_to_dec(nombre: str) -&gt; int:\n    \"\"\"\n    Cette fonction transforme un nombre hexad\u00e9cimal(en cha\u00eene de caract\u00e8res)\n    en sa repr\u00e9sentation en base 10.\n    \"\"\"\n</code></pre> <ol> <li>Compl\u00e9ter la fonction suivante :  </li> </ol> <pre><code>def dec_to_bin(nombre: int) -&gt; str:\n    \"\"\"\n    Cette fonction transforme un nombre entier en base 10\n    en sa repr\u00e9sentation en base 16 (cha\u00eene de caract\u00e8res).\n    \"\"\"\n</code></pre>"},{"location":"NSI_1/type_et_valeur_de_base/base/#exercice-complementaire","title":"exercice complementaire","text":"<p>Exercice pratique</p> <ol> <li>Compl\u00e9ter la fonction suivante sans passer par la base 10 :  </li> </ol> <pre><code>def hex_to_bin(nombre: str) -&gt; str:\n    \"\"\"\n    Cette fonction transforme un nombre hexad\u00e9cimal (en cha\u00eene de caract\u00e8res)\n    en sa repr\u00e9sentation en base 2 (cha\u00eene de caract\u00e8res).\n    \"\"\"\n</code></pre> <ol> <li>Compl\u00e9ter la fonction suivante sans passer par la base 10 :  </li> </ol> <pre><code>def bin_to_hex(nombre: str) -&gt; str:\n    \"\"\"\n    Cette fonction transforme un nombre en base 2 (cha\u00eene de caract\u00e8res)\n    en sa repr\u00e9sentation en base 16 (cha\u00eene de caract\u00e8res).\n    \"\"\"\n</code></pre> indice : <p>Chaque chiffre hexad\u00e9cimal correspond exactement \u00e0 un groupe de 4 bits en binaire. Exemple : - A (hexad\u00e9cimal) = 1010 (binaire) - F (hexad\u00e9cimal) = 1111 (binaire)  </p> <p>Pour convertir de l\u2019hexad\u00e9cimal vers le binaire, tu peux : - parcourir chaque caract\u00e8re hexad\u00e9cimal, - le remplacer par son \u00e9quivalent en 4 bits.  </p> <p>Pour convertir du binaire vers l\u2019hexad\u00e9cimal, tu peux : - regrouper les bits par paquets de 4 (en ajoutant des z\u00e9ros \u00e0 gauche si besoin), - puis remplacer chaque groupe de 4 par le chiffre hexad\u00e9cimal correspondant.  </p>"},{"location":"NSI_1/type_et_valeur_de_base/operations/","title":"\ud83d\udd22 representation des nombre en machine","text":""},{"location":"NSI_1/type_et_valeur_de_base/operations/#i-introduction","title":"\u2139\ufe0f Introduction","text":"<p>Les ordinateurs ne comprennent que deux symboles : 0 et 1.  Ces deux valeurs correspondent \u00e0 deux \u00e9tats \u00e9lectriques (passage du courant ou absence de courant) et constituent la base du langage binaire.</p> <p>Mais comment repr\u00e9senter, avec uniquement des suites de 0 et de 1, tous les nombres que nous utilisons en math\u00e9matiques : entiers positifs, entiers n\u00e9gatifs, fractions, nombres tr\u00e8s grands ou tr\u00e8s petits ?</p> <p>La r\u00e9ponse repose sur diff\u00e9rentes m\u00e9thodes de repr\u00e9sentation des nombres en machine. Au fil du temps, des conventions se sont impos\u00e9es pour :</p> <ul> <li> <p>coder les entiers positifs et n\u00e9gatifs,</p> </li> <li> <p>repr\u00e9senter les fractions et nombres r\u00e9els gr\u00e2ce \u00e0 la virgule fixe ou la virgule flottante,</p> </li> <li> <p>normaliser cette \u00e9criture avec des standards modernes comme la norme IEEE 754.</p> </li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#les-entiers-positifs","title":"\u2795 Les entiers positifs","text":"<p>Un ordinateur manipule les entiers positifs en utilisant le syst\u00e8me binaire.  Chaque chiffre binaire (bit) peut \u00eatre 0 ou 1.</p> <ul> <li>Avec n bits, on peut repr\u00e9senter des entiers allant de :</li> </ul> <p> </p> <p>Exemples :</p> <ul> <li> <p>Avec 3 bits \u2192 nombres de 0 \u00e0 7 :</p> <ul> <li>000 = 0</li> <li>001 = 1</li> <li>010 = 2</li> <li>011 = 3</li> <li>100 = 4</li> <li>101 = 5</li> <li>110 = 6</li> <li>111 = 7</li> </ul> </li> <li> <p>Avec 8 bits (1 octet) \u2192 nombres de 0 \u00e0 255.</p> </li> <li> <p>Avec 16 bits \u2192 nombres de 0 \u00e0 65 535.</p> </li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#les-nombres-flottants","title":"\ud83c\udf0a Les nombres flottants","text":"<p>Jusqu\u2019ici, nous avons vu comment repr\u00e9senter les entiers en machine. Cependant, dans de nombreux calculs, il est n\u00e9cessaire de manipuler des nombres d\u00e9cimaux : par exemple des mesures (3,14 m\u00e8tres, 0,25 seconde), des r\u00e9sultats scientifiques ou encore des valeurs financi\u00e8res.</p> <p>Le probl\u00e8me est que l\u2019ordinateur ne dispose que d\u2019un nombre limit\u00e9 de bits, et il faut donc trouver une mani\u00e8re efficace de repr\u00e9senter ces nombres qui comportent une partie fractionnaire.</p> <p>Deux grandes approches ont \u00e9t\u00e9 d\u00e9velopp\u00e9es :</p> <ul> <li> <p>La virgule fixe, qui consiste \u00e0 r\u00e9server un certain nombre de bits pour la partie enti\u00e8re et un certain nombre pour la partie d\u00e9cimale.</p> </li> <li> <p>La virgule flottante, qui utilise une \u00e9criture proche de la notation scientifique (en base 2), permettant de repr\u00e9senter des nombres tr\u00e8s grands comme des nombres tr\u00e8s petits avec une certaine pr\u00e9cision.</p> </li> </ul> <p>Ces m\u00e9thodes ont chacune leurs avantages et leurs limites, et elles ont conduit \u00e0 l\u2019\u00e9tablissement de normes modernes pour assurer une repr\u00e9sentation standardis\u00e9e dans tous les ordinateurs.</p>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#1-la-virgule-fixe","title":"1. La virgule fixe","text":"<p>Dans ce syst\u00e8me, on r\u00e9serve un certain nombre de bits pour la partie enti\u00e8re et un certain nombre de bits pour la partie fractionnaire.</p> <p>Exemple :</p> <p>Imaginons qu\u2019on ait 8 cases (bits) pour \u00e9crire un nombre : on peut en utiliser 4 pour la partie avant la virgule (la partie enti\u00e8re) et 4 pour la partie apr\u00e8s la virgule (la partie d\u00e9cimale).</p> <pre><code>1101.0101\n</code></pre> <ul> <li>Partie enti\u00e8re : <code>1101</code> = 13</li> <li>Partie fractionnaire : <code>0101</code> = 0,3125</li> <li>R\u00e9sultat = 13,3125</li> </ul> <p>\u2705 Avantage : simple \u00e0 comprendre et \u00e0 utiliser.</p> <p>\u274c Inconv\u00e9nient : la pr\u00e9cision est fixe et limit\u00e9e. On ne peut pas repr\u00e9senter \u00e0 la fois de tr\u00e8s grands nombres et de tr\u00e8s petits nombres.</p> <p>partie fractionnaire</p> <p>Dans le syst\u00e8me binaire, la partie enti\u00e8re se lit comme d\u2019habitude (avec des puissances de 2 positives). En revanche, la partie fractionnaire se calcule avec des puissances de 2 n\u00e9gatives :</p> <p> </p> <p>\ud83d\udcdd Exercice 1:</p> <p>Convertis les nombres binaires suivants en d\u00e9cimal :</p> <ol> <li><code>0,1\u2082</code></li> <li><code>0,01\u2082</code></li> <li><code>0,11\u2082</code></li> <li><code>0,101\u2082</code></li> <li><code>0,1101\u2082</code></li> </ol> <p>\ud83d\udcdd Exercice 2:</p> <p>Repr\u00e9sente les nombres d\u00e9cimaux suivants en binaire sur 8 bits,  en utilisant 4 bits pour la partie enti\u00e8re et 4 bits pour la partie fractionnaire.</p> <ol> <li>5,5  </li> <li>2,25  </li> <li>7,75  </li> <li>3,125</li> </ol>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#exemple-avec-001012","title":"Exemple avec <code>0,0101\u2082</code> :","text":"<ul> <li>Le premier chiffre apr\u00e8s la virgule est <code>0</code> \u2192  </li> <li>Le deuxi\u00e8me chiffre est <code>1</code> \u2192  </li> <li>Le troisi\u00e8me chiffre est <code>0</code> \u2192  </li> <li>Le quatri\u00e8me chiffre est <code>1</code> \u2192  </li> </ul> <p>On additionne :</p> <p> </p> <p>Donc :</p> <p> </p>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#2-la-virgule-flottante","title":"2. La virgule flottante","text":"<p>Pour d\u00e9passer les limites de la virgule fixe, on utilise une \u00e9criture proche de la notation scientifique.</p> <p> </p> <p>En binaire, on applique la m\u00eame id\u00e9e :</p> <p> </p> <ul> <li>Mantisse : contient les chiffres significatifs</li> <li>Exposant : d\u00e9termine o\u00f9 se situe la virgule</li> </ul> <p>Exemple :</p> <p>Nombre d\u00e9cimal : 13,25 Conversion en binaire : 13,25 = 1101,01\u2082 \u00c9criture scientifique binaire : 1,10101 \u00d7 2^3</p> <ul> <li>Exposant : 3 = 011\u2082</li> <li>Mantisse : 10101 (on garde 5 bits apr\u00e8s la virgule)</li> </ul> <p>\u2192 Stockage en machine sur 8 bits (sans biais, sans bit de signe) : <pre><code>011 10101\n</code></pre></p> <p>Explication : - Les 3 premiers bits repr\u00e9sentent l\u2019exposant (<code>011</code>). - Les 5 bits suivants repr\u00e9sentent la mantisse (<code>10101</code>). - La valeur d\u00e9cimale peut \u00eatre reconstruite : 1,10101\u2082 \u00d7 2^3 \u2248 13,25</p> <p>\ud83d\udcdd Exercice 3:</p> <p>Repr\u00e9sente les nombres d\u00e9cimaux suivants en virgule flottante  dans un format simplifi\u00e9 sur 8 bits :</p> <ul> <li>3 bits pour l\u2019exposant</li> <li> <p>4 bits pour la mantisse (apr\u00e8s la virgule)</p> </li> <li> <p>+5,5</p> </li> <li>+0,75</li> </ul> <p>\ud83d\udcdd Exercice code:</p> <ul> <li>completez la fonction suivante</li> </ul> <pre><code>def frac_to_bin(fraction: float, m: int) -&gt; str:\n    \"\"\"\n    Fonction permettant de convertir la partie fractionnaire d'un nombre d\u00e9cimal\n    en binaire sur m bits.\n\n    Param\u00e8tres:\n        fraction: float, la partie fractionnaire (0 &lt;= fraction &lt; 1)\n        m: int, le nombre de bits maximum \u00e0 g\u00e9n\u00e9rer\n\n    Retour:\n        str, la cha\u00eene de caract\u00e8res repr\u00e9sentant la partie fractionnaire en binaire\n\n    Exemple:\n    &gt;&gt;&gt; frac_to_bin(0.625, 5)\n    '10100'\n    \"\"\"\n</code></pre> <ul> <li>completez la fonction suivante</li> </ul> <pre><code>def bin_to_frac(bits: str) -&gt; float:\n    \"\"\"\n    Fonction permettant de convertir une cha\u00eene binaire repr\u00e9sentant la partie\n    fractionnaire d\u2019un nombre en sa valeur d\u00e9cimale.\n\n    Param\u00e8tres:\n        bits: str, la cha\u00eene binaire (ex: \"101\" correspond \u00e0 0.101\u2082)\n\n    Retour:\n        float, la valeur d\u00e9cimale correspondante\n\n    Exemple:\n    &gt;&gt;&gt; bin_to_frac(\"101\")\n    0.625\n    &gt;&gt;&gt; bin_to_frac(\"00011\")\n    0.09375\n    \"\"\"\n</code></pre> <p>\u2705 Avantage : permet de repr\u00e9senter \u00e0 la fois des nombres tr\u00e8s grands et des nombres tr\u00e8s petits.</p> <p>\u274c Inconv\u00e9nient : pas tous les nombres d\u00e9cimaux sont repr\u00e9sentables exactement (par exemple 0,1 en binaire).</p>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#les-nombres-negatifs","title":"\u2796 Les nombres n\u00e9gatifs","text":"<p>En math\u00e9matiques sur papier, on indique simplement qu\u2019un nombre est n\u00e9gatif en mettant un signe \u201c-\u201d devant. En informatique, les ordinateurs ne comprennent que des suites de 0 et de 1. Il faut donc d\u00e9finir une m\u00e9thode pr\u00e9cise pour repr\u00e9senter les nombres n\u00e9gatifs en binaire.</p> <p>Diff\u00e9rentes m\u00e9thodes ont \u00e9t\u00e9 utilis\u00e9es pour coder les nombres n\u00e9gatifs, dont :</p> <ol> <li>le bit de poids fort (o\u00f9 un bit indique simplement le signe),</li> <li>le compl\u00e9ment \u00e0 2, la m\u00e9thode standard utilis\u00e9e dans tous les ordinateurs modernes.</li> </ol>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#1-bit-de-poids-fort","title":"1. Bit de poids fort","text":"<ul> <li> <p>Id\u00e9e : le bit le plus \u00e0 gauche (bit de poids fort) indique le signe du nombre :</p> </li> <li> <p><code>0</code> \u2192 positif</p> </li> <li><code>1</code> \u2192 n\u00e9gatif</li> </ul> <p>Exemple :</p> <p>Le nombre 13 s\u2019\u00e9crit <code>1101</code> en binaire. </p> <p>Pour le repr\u00e9senter sur 8 bits en machine :  </p> <ul> <li>+13 \u2192 <code>00001101</code> </li> <li>-13 \u2192 <code>10001101</code> (en utilisant le bit de poids fort pour indiquer le signe)</li> </ul> <p>\ud83d\udcdd Exercice 4:</p> <p>Repr\u00e9sente les nombres d\u00e9cimaux suivants en binaire sur 8 bits en utilisant le bit de poids fort pour le signe :</p> <ol> <li>+14  </li> <li>-9  </li> <li>+12  </li> <li>-5</li> </ol> <p>\u274c Inconv\u00e9nient :</p> <ul> <li>Deux repr\u00e9sentations du z\u00e9ro : <code>00000000</code> et <code>10000000</code></li> <li>Les calculs arithm\u00e9tiques deviennent compliqu\u00e9s</li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#2-complement-a-2","title":"2. Compl\u00e9ment \u00e0 2","text":"<p>Le compl\u00e9ment \u00e0 2 est la m\u00e9thode standard pour repr\u00e9senter les nombres n\u00e9gatifs en binaire.</p> <p>R\u00e8gle : Pour obtenir -N :</p> <ol> <li>On \u00e9crit N en binaire.</li> <li>On inverse tous les bits (compl\u00e9ment \u00e0 1).</li> <li>On ajoute 1.</li> </ol> <p>Exemple :</p> <p>repr\u00e9senter -13 sur 8 bits a l'aide du compl\u00e9ment \u00e0 2:</p> <ol> <li>+13 = <code>00001101</code></li> <li>Inversion (compl\u00e9ment \u00e0 1) = <code>11110010</code></li> <li>Ajouter 1 = <code>11110011</code> \u2192 -13</li> </ol> <p>\ud83d\udcdd Exercice 5:</p> <p>Repr\u00e9senter les nombres suivants en compl\u00e9ment \u00e0 2 sur 8 bits :</p> <ol> <li>+12  </li> <li>-12  </li> <li>+7  </li> <li>-7</li> </ol> <p>\ud83d\udcdd Exercice code:</p> <ul> <li>completez la fonction suivante</li> </ul> <pre><code>def bin_to_comp_2(nombre: str, n: int) -&gt; str:\n    \"\"\"\n    Fonction permettant de repr\u00e9senter en compl\u00e9ment \u00e0 2, sur n bits,\n    un nombre binaire donn\u00e9 en param\u00e8tre.\n\n    Param\u00e8tres:\n        nombre: str, le nombre binaire \u00e0 convertir\n        n: int, le nombre de bits utilis\u00e9s pour la repr\u00e9sentation\n\n    Retour:\n        str, la cha\u00eene de caract\u00e8res repr\u00e9sentant le compl\u00e9ment \u00e0 2\n        du nombre en utilisant n bits\n\n    Exemple:\n    &gt;&gt;&gt; bin_to_comp_2(\"101\", 5)\n    '11011'\n    &gt;&gt;&gt; bin_to_comp_2(\"1\", 7)\n    '1111111'\n    \"\"\"\n</code></pre> <ul> <li>completez la fonction suivante</li> </ul> <pre><code>def dec_to_comp_2(nombre: int, n: int) -&gt; str:\n\"\"\"\nFonction permettant de convertir un entier en sa repr\u00e9sentation\nen compl\u00e9ment \u00e0 2 sur n bits.\n\nParam\u00e8tres:\n    nombre: int, le nombre \u00e0 convertir\n    n: int, le nombre de bits utilis\u00e9s pour la repr\u00e9sentation\n\nRetour:\n    str, la cha\u00eene de caract\u00e8res repr\u00e9sentant le compl\u00e9ment \u00e0 2\n    du nombre en utilisant n bits\n\nExemple:\n&gt;&gt;&gt; dec_to_comp_2(5, 5)\n'00101'\n&gt;&gt;&gt; dec_to_comp_2(-5, 5)\n'11011'\n&gt;&gt;&gt; dec_to_comp_2(-1, 7)\n'1111111'\n\"\"\"\n</code></pre> <ul> <li>completez la fonction suivante</li> </ul> <p>```py</p> <p>def dec_to_repr(nombre: int, n: int) -&gt; str:     \"\"\"     Fonction permettant de convertir un entier en binaire sur n bits :     - si le nombre est positif ou nul \u2192 repr\u00e9sentation binaire classique     - si le nombre est n\u00e9gatif \u2192 repr\u00e9sentation en compl\u00e9ment \u00e0 2</p> <pre><code>Param\u00e8tres:\n    nombre: int, le nombre \u00e0 convertir\n    n: int, le nombre de bits utilis\u00e9s pour la repr\u00e9sentation\n\nRetour:\n    str, la cha\u00eene de caract\u00e8res repr\u00e9sentant le nombre en binaire\n    classique si positif, ou en compl\u00e9ment \u00e0 2 si n\u00e9gatif, sur n bits\n\nExemple:\n&gt;&gt;&gt; dec_to_repr(-5, 5)\n'11011'\n&gt;&gt;&gt; dec_to_repr(5, 5)\n'00101'\n&gt;&gt;&gt; dec_to_repr(-1, 7)\n'1111111'\n&gt;&gt;&gt; dec_to_repr(1, 7)\n'0000001'\n\"\"\"\n```\n</code></pre> <p>\u2705 Avantages :</p> <ul> <li>Un seul z\u00e9ro (<code>00000000</code>)</li> <li>Les additions et soustractions fonctionnent directement comme avec des nombres positifs</li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#la-norme-ieee-754","title":"\ud83d\udda5\ufe0f La norme IEEE 754","text":"<p>La norme IEEE 754 d\u00e9finit comment repr\u00e9senter les nombres r\u00e9els (\u00e0 virgule flottante) en m\u00e9moire de mani\u00e8re standardis\u00e9e, afin que tous les ordinateurs et logiciels manipulent les m\u00eames valeurs. Elle garantit la compatibilit\u00e9 et la pr\u00e9cision dans les calculs scientifiques, financiers ou techniques.</p>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#1-principe-general","title":"1. Principe g\u00e9n\u00e9ral","text":"<p>Un nombre flottant est repr\u00e9sent\u00e9 par trois \u00e9l\u00e9ments :</p> <p> </p> <ol> <li> <p>Signe : 1 bit</p> <ul> <li><code>0</code> \u2192 nombre positif</li> <li><code>1</code> \u2192 nombre n\u00e9gatif</li> </ul> </li> <li> <p>Exposant : stocke la puissance de 2.</p> <ul> <li>Il est biais\u00e9 pour permettre la repr\u00e9sentation d\u2019exposants n\u00e9gatifs.</li> <li>Exemple : en simple pr\u00e9cision, le biais est 127. Si l\u2019exposant r\u00e9el est 3, on stocke 3 + 127 = 130.</li> </ul> </li> <li> <p>Mantisse (ou fraction) : repr\u00e9sente les chiffres significatifs du nombre.</p> <ul> <li>Elle est toujours normalis\u00e9e, ce qui signifie que le premier chiffre avant la virgule est toujours 1 (impl\u00e9ment\u00e9 de mani\u00e8re implicite dans la norme IEEE 754).</li> </ul> </li> </ol>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#2-formats-les-plus-courants","title":"2. Formats les plus courants","text":""},{"location":"NSI_1/type_et_valeur_de_base/operations/#a-simple-precision-32-bits","title":"a. Simple pr\u00e9cision (32 bits)","text":"<ul> <li>1 bit pour le signe</li> <li>8 bits pour l\u2019exposant (biais = 127)</li> <li>23 bits pour la mantisse</li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#b-double-precision-64-bits","title":"b. Double pr\u00e9cision (64 bits)","text":"<ul> <li>1 bit pour le signe</li> <li>11 bits pour l\u2019exposant (biais = 1023)</li> <li>52 bits pour la mantisse</li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#3-exemple-pratique","title":"3. Exemple pratique","text":"<p>Nombre : <code>-13,25</code></p> <ol> <li>Conversion en binaire : 13,25 = <code>1101,01\u2082</code></li> <li>\u00c9criture scientifique binaire : <code>1,10101 \u00d7 2^3</code></li> <li>Signe : <code>1</code> (n\u00e9gatif)</li> <li>Exposant biais\u00e9 : 3 + 127 = 130 = <code>10000010</code></li> <li>Mantisse : <code>10101000000000000000000</code> (23 bits)</li> </ol> <p>Stockage IEEE 754 (32 bits) :</p> <pre><code>1 10000010 10101000000000000000000\n</code></pre> <ul> <li>1er bit = signe</li> <li>8 bits suivants = exposant biais\u00e9</li> <li>23 bits suivants = mantisse</li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/operations/#4-avantages-de-la-norme-ieee-754","title":"4.\u2705 Avantages de la norme IEEE 754","text":"<ul> <li>Standard universel : m\u00eame repr\u00e9sentation sur tous les ordinateurs</li> <li>Grande plage de valeurs : peut repr\u00e9senter \u00e0 la fois des nombres tr\u00e8s grands et tr\u00e8s petits</li> <li> <p>Gestion des cas particuliers :</p> </li> <li> <p><code>+0</code> et <code>-0</code></p> </li> <li><code>+\u221e</code> et <code>-\u221e</code></li> <li> <p><code>NaN</code> (Not a Number, utilis\u00e9 pour indiquer un r\u00e9sultat invalide)</p> </li> <li> <p>Pr\u00e9cision contr\u00f4l\u00e9e : le nombre de bits pour la mantisse d\u00e9finit la pr\u00e9cision maximale</p> </li> </ul>"},{"location":"NSI_1/type_et_valeur_de_base/representations_caractere/","title":"representation des caractere en machine","text":""},{"location":"NSI_1/type_et_valeur_de_base/representations_caractere/#histoire","title":"histoire","text":""},{"location":"NSI_1/type_et_valeur_de_base/representations_caractere/#codage","title":"codage","text":""},{"location":"NSI_1/type_et_valeur_de_base/representations_caractere/#decodage","title":"decodage","text":""},{"location":"NSI_1/type_et_valeur_de_base/representations_caractere/#encodage","title":"encodage","text":""},{"location":"NSI_1/type_et_valeur_de_base/representations_caractere/#ascii","title":"ascii","text":""},{"location":"NSI_1/type_et_valeur_de_base/representations_caractere/#tableau","title":"tableau","text":""},{"location":"NSI_1/type_et_valeur_de_base/representations_caractere/#_1","title":"representation des caractere en machine","text":""},{"location":"NSI_1/type_et_valeur_de_base/representations_caractere/#iso-latin","title":"iso latin","text":""},{"location":"NSI_1/type_et_valeur_de_base/representations_caractere/#utf8","title":"utf8","text":""},{"location":"NSI_1/type_et_valeur_de_base/sommaire/","title":"Sommaire","text":"<ul> <li>notion de base</li> <li>representations des nombres en machine</li> </ul>"},{"location":"SNT/Donnees_Structurees/cours/","title":"Cours sur Internet","text":""},{"location":"SNT/Donnees_Structurees/cours/#internet","title":"Internet","text":"<p>...</p>"},{"location":"SNT/Donnees_Structurees/exo_comp/","title":"exercice complementaire","text":""},{"location":"SNT/Donnees_Structurees/sommaire/","title":"Sommaire","text":"<ul> <li>cours</li> <li>travaux diriger</li> <li>travaux pratique</li> <li>exercice complementaire</li> </ul>"},{"location":"SNT/Donnees_Structurees/travaux_pratique/","title":"travaux pratique","text":""},{"location":"SNT/Geolocalisation/cours/","title":"Cours sur Internet","text":""},{"location":"SNT/Geolocalisation/cours/#internet","title":"Internet","text":"<p>...</p>"},{"location":"SNT/Geolocalisation/exo_comp/","title":"exercice complementaire","text":""},{"location":"SNT/Geolocalisation/sommaire/","title":"Sommaire","text":"<ul> <li>cours</li> <li>travaux diriger</li> <li>travaux pratique</li> <li>exercice complementaire</li> </ul>"},{"location":"SNT/Geolocalisation/travaux_pratique/","title":"travaux pratique","text":""},{"location":"SNT/Internet/convertions_de_base/","title":"Convertions de base","text":""},{"location":"SNT/Internet/convertions_de_base/#base","title":"base","text":"<p>passage d'une base a une autre</p> <p>pour passer de la base 10 a la base 16 il faut faire des divisions successive par 16 du nombre jusqu'a obtenir 0.</p> <p>une fois c'est divisions effectuet on garde seulement le reste de chaque division</p> <p></p> <p>pour passer de la base 16 a la base 10 il faut poser le calcule suivant</p> <p> </p> <p>exemple:</p> <p> </p> <p> </p>"},{"location":"SNT/Internet/cours/","title":"Internet","text":""},{"location":"SNT/Internet/cours/#introduction","title":"\ud83e\udd14 Introduction","text":"<p>Internet fait aujourd\u2019hui partie de notre quotidien : on l\u2019utilise pour envoyer des messages, regarder des vid\u00e9os, jouer en ligne, faire des recherches\u2026 Mais comment \u00e7a fonctionne vraiment ?</p> <p>Voici quelques questions que vous vous \u00eates peut-\u00eatre d\u00e9j\u00e0 pos\u00e9es :</p> <ul> <li> <p>Comment mon t\u00e9l\u00e9phone arrive-t-il \u00e0 parler avec un autre \u00e0 l\u2019autre bout du monde ?</p> </li> <li> <p>Qu\u2019est-ce qu\u2019il se passe quand je tape une adresse dans mon navigateur ?</p> </li> <li> <p>Comment les machines savent \u00e0 qui envoyer les donn\u00e9es ?</p> </li> <li> <p>Pourquoi a-t-on parfois besoin d\u2019une box pour se connecter ?</p> </li> <li> <p>C\u2019est quoi une adresse IP ou une adresse MAC ?</p> </li> <li> <p>Qu\u2019est-ce qu\u2019un r\u00e9seau exactement ?</p> </li> </ul> <p>Dans cette le\u00e7on, nous allons r\u00e9pondre \u00e0 toutes ces questions en d\u00e9couvrant comment les machines communiquent entre elles, quels sont les composants d\u2019un r\u00e9seau, et comment les informations circulent sur Internet.</p>"},{"location":"SNT/Internet/cours/#point-historique","title":"\u231b Point historique","text":""},{"location":"SNT/Internet/cours/#definitions","title":"D\u00e9finitions","text":"<p>D\u00e9finition : r\u00e9seau</p> <p>Ensemble de machines reli\u00e9es entre elles de telle sorte qu'elles puissent communiquer ensemble.</p> <p>types de r\u00e9seaux</p> <p>On distingue plusieurs types de r\u00e9seaux, dont le r\u00e9seau local.</p> <p>D\u00e9finition : r\u00e9seau local</p> <p>Un r\u00e9seau o\u00f9 les machines peuvent communiquer directement entre elles sans passer par d'autres r\u00e9seaux.</p> <p>Exemple : un r\u00e9seau domestique</p> <p></p> <p>D\u00e9finition : Internet</p> <p>Un immense r\u00e9seau qui relie tous les petits r\u00e9seaux du monde pour que les machines puissent s\u2019envoyer des messages, partager des fichiers, ou afficher des sites web.</p>"},{"location":"SNT/Internet/cours/#composants-dun-reseau","title":"\ud83e\udde9 Composants d\u2019un r\u00e9seau","text":"<p>Voici un tableau r\u00e9capitulatif des \u00e9l\u00e9ments que l'on peut croiser dans un r\u00e9seau :</p> \u00c9l\u00e9ment R\u00f4le Exemple Machines \u00c9l\u00e9ment qui cherche \u00e0 communiquer, envoyer ou recevoir des donn\u00e9es Ordinateur, tablettes, consoles, smartphones Switch \u00c9l\u00e9ment qui relie de mani\u00e8re locale des machines Box Internet, switch RJ45 Routeur \u00c9l\u00e9ment qui permet de relier un r\u00e9seau local \u00e0 Internet ou \u00e0 d'autres r\u00e9seaux Box Internet, routeur sp\u00e9cifique C\u00e2bles, ondes \u00c9l\u00e9ment qui permet de relier les machines au switch ou au routeur C\u00e2ble Ethernet, fibre optique, Wi-Fi"},{"location":"SNT/Internet/cours/#identifiants-des-machines-sur-un-reseau","title":"\ud83c\udd94 Identifiants des machines sur un r\u00e9seau","text":""},{"location":"SNT/Internet/cours/#premier-niveau-ladresse-mac","title":"Premier niveau : l'adresse MAC","text":"<p>Chaque machine dispose d\u2019une ou plusieurs cartes r\u00e9seau. Ces cartes permettent de communiquer localement ou globalement.</p> <p>Chaque carte poss\u00e8de un identifiant unique appel\u00e9 adresse MAC (Media Access Control).</p> <p>Une adresse MAC est compos\u00e9e de 6 blocs de 2 caract\u00e8res hexad\u00e9cimaux.</p> <p> </p> <p>Exemple : </p> <p>La base hexad\u00e9cimale</p> <p>La base hexad\u00e9cimale correspond \u00e0 une repr\u00e9sentation en 16 caract\u00e8res de chiffres ou de lettres des nombres. Les caract\u00e8res vont de 0 \u00e0 F (F repr\u00e9sentant 15 en base d\u00e9cimale).</p> nombre hexad\u00e9cimal 0 ... 9 A B C D E F nombre d\u00e9cimal 0 ... 9 10 11 12 13 14 15"},{"location":"SNT/Internet/cours/#second-niveau-ladresse-ip","title":"Second niveau : l'adresse IP","text":"<p>L\u2019adresse MAC permet d\u2019identifier pr\u00e9cis\u00e9ment une machine, mais ne donne aucune information sur son emplacement dans un r\u00e9seau. Il existe donc une seconde adresse attribu\u00e9e \u00e0 chaque machine : l\u2019adresse IP.</p> <p>L'adresse IP est attribu\u00e9e aux machines pr\u00e9sentes sur un r\u00e9seau afin qu\u2019elles puissent \u00eatre identifi\u00e9es de mani\u00e8re plus globale.</p> <p>Elle est compos\u00e9e de deux parties :</p> <ul> <li>La partie r\u00e9seau : elle permet d\u2019identifier un r\u00e9seau sur Internet.</li> <li>La partie machine : elle permet d\u2019identifier une machine sur ce r\u00e9seau.</li> </ul> <p>Une adresse IP est compos\u00e9e de 4 nombres allant de 0 \u00e0 255 sous forme binaire.</p> <p> </p> <p>Exemple :</p> <p>Sous forme d\u00e9cimale :  </p> <p>Sous forme binaire :  </p> <p>La base hexad\u00e9cimale</p> <p>La base hexad\u00e9cimale correspond \u00e0 une repr\u00e9sentation en 2 caract\u00e8res de chiffres des nombres. Les caract\u00e8res vont de 0 \u00e0 1.</p> nombre d\u00e9cimal 0 1 2 3 4 5 6 7 8 nombre binaire 0 1 10 11 100 101 110 111 1000 <p> </p> <p>Afin de d\u00e9limiter la partie r\u00e9seau de la partie machine, on utilise un masque de sous-r\u00e9seau.</p> <p> </p> <p>Exemple :</p> <p>On dispose de l'adresse <code>128.40.94.3</code> avec un masque de 16 bits(soit les 16 premier bit de l'adresse coresponde \u00e0 la partie r\u00e9seau et le reste des bits \u00e0 la partie machine)</p> <p>Cela correspond en binaire \u00e0 :  </p> <p>Le masque de sous-r\u00e9seau etant de 16 bits il correspond donc \u00e0:  </p> <p>si maintenant on apllique le masque de sous resaux sur l'adresse ip:  </p> <p>donc la partie resaux de cette adresse est <code>128.40.0.0</code></p> <p> </p>"},{"location":"SNT/Internet/cours/#echange-dinformations","title":"\ud83d\udd01 \u00c9change d\u2019informations","text":"<p>Maintenant que nous savons comment les machines s\u2019identifient entre elles, int\u00e9ressons-nous \u00e0 la mani\u00e8re dont elles \u00e9changent des informations.</p> <p>D\u00e9finition : protocole Un protocole informatique est un ensemble de r\u00e8gles qui r\u00e9gissent les \u00e9changes entre machines.</p> <p>D\u00e9finition : protocole TCP/IP Le protocole TCP/IP permet la communication et l\u2019\u00e9change de donn\u00e9es sur Internet entre une machine \u00e9mettrice et une machine r\u00e9ceptrice.</p> <p>Ce protocole est compos\u00e9 de deux sous-protocoles :</p> <ul> <li>Le protocole TCP permet le contr\u00f4le et la s\u00e9curit\u00e9 de l\u2019envoi des paquets. Il permet de s\u2019assurer qu\u2019un paquet est bien arriv\u00e9 \u00e0 destination \u00e0 l\u2019aide d\u2019accus\u00e9s de r\u00e9ception.</li> <li>Le protocole IP permet d\u2019identifier quelles machines sur quels r\u00e9seaux communiquent, \u00e0 l\u2019aide de leur adresse IP.</li> </ul> <p>fonctionnement protocole</p> <p>Le protocole TCP/IP fonctionne en plusieurs \u00e9tapes :</p> <ol> <li>Les donn\u00e9es \u00e0 \u00e9changer sont d\u00e9coup\u00e9es en plusieurs paquets (s\u00e9quences de 0 et 1) de taille d\u00e9finie et num\u00e9rot\u00e9s.</li> <li>Les paquets transitent du point de d\u00e9part \u00e0 la machine de destination.</li> <li>Tous les paquets sont reconstruits \u00e0 l\u2019aide de leur num\u00e9rotation.</li> <li>Un contr\u00f4le d\u2019int\u00e9grit\u00e9 est effectu\u00e9 par la machine r\u00e9ceptrice pour s\u2019assurer que les donn\u00e9es sont compl\u00e8tes et correctes. Si ce n\u2019est pas le cas, la machine demande la retransmission des paquets d\u00e9fectueux.</li> </ol>"},{"location":"SNT/Internet/exo_comp/","title":"exercice complementaire","text":""},{"location":"SNT/Internet/sommaire/","title":"Sommaire","text":"<ul> <li>cours</li> <li>travaux diriger</li> <li>travaux pratique</li> <li>exercice complementaire</li> </ul>"},{"location":"SNT/Internet/travaux_diriger/","title":"TD Internet","text":""},{"location":"SNT/Internet/travaux_diriger/#base-2","title":"Base 2","text":""},{"location":"SNT/Internet/travaux_diriger/#passage-de-la-representation-en-base-10-a-la-representation-en-base-2","title":"passage de la representation en base 10 a la representation en base 2","text":"<p>Afin de passer d'un nombre representait en base 10 (soit celle utiliser au quotidien) a un nombre representait en base 2 on utilise ce que l'on appele la methode de la division successive</p> <p>Exemple :</p> <p>Soit le nombre <code>22</code> representait en base 10. On desire representait ce nombre en base 2.</p> <p>on divise le nombre par 2 a l'aide de la division euclidienne:</p> <p> </p> <p>nous allons ensuite repreter cette operation en passant le quotient en dividende</p> <p> </p> <p>finalement on s'arrete lorsque le quotient est egale a 0</p> <p> </p> <p>une fois terminer on conserve les reste de nos operations successive dans l'ordre suivant:</p> <p></p> <p>on obtient donc <code>10110</code> comme resultat</p>"},{"location":"SNT/Internet/travaux_diriger/#exercice","title":"exercice:","text":"<p>passer les nombre suivant representait en base 10 a leur representation on base 2</p> <p> </p>"},{"location":"SNT/Internet/travaux_diriger/#passage-de-la-representation-en-base-2-a-la-representation-en-base-10","title":"passage de la representation en base 2 a la representation en base 10","text":"<p>afin maintenant de passer de la representation en base 2 a la representation en base 10 il suffit de faire la simple opperations suivante</p> <p> </p> <p>Exemple :</p> <p>Soit le nombre <code>10110</code> representait en base 2. On desire representait ce nombre en base 10.</p> <p>reprenons l'operation precedante:</p> <p> </p> <p>appliquons la a notre probleme</p> <p> </p> <p>simplifiont les calcule des puissance:</p> <p> </p> <p>finalement remplacons les nombre <code>u</code> par leur equivalent dans le nombre <code>10110</code>:</p> <p> </p> <p> </p> <p>on peut donc calculer le resultat maintenant:</p> <p> </p> <p>notre resultat est donc <code>22</code> </p>"},{"location":"SNT/Internet/travaux_diriger/#exercice_1","title":"exercice:","text":"<p>passer les nombre suivant representait en base 2 a leur representation on base 10</p> <p> </p>"},{"location":"SNT/Internet/travaux_diriger/#base-16","title":"Base 16","text":""},{"location":"SNT/Internet/travaux_pratique/","title":"travaux pratique","text":""},{"location":"SNT/Objets_Connectes/cours/","title":"Cours sur Internet","text":""},{"location":"SNT/Objets_Connectes/cours/#internet","title":"Internet","text":"<p>...</p>"},{"location":"SNT/Objets_Connectes/exo_comp/","title":"exercice complementaire","text":""},{"location":"SNT/Objets_Connectes/sommaire/","title":"Sommaire","text":"<ul> <li>cours</li> <li>travaux diriger</li> <li>travaux pratique</li> <li>exercice complementaire</li> </ul>"},{"location":"SNT/Objets_Connectes/travaux_pratique/","title":"travaux pratique","text":""},{"location":"SNT/Photographie_Numerique/cours/","title":"Cours sur Internet","text":""},{"location":"SNT/Photographie_Numerique/cours/#internet","title":"Internet","text":"<p>...</p>"},{"location":"SNT/Photographie_Numerique/exo_comp/","title":"exercice complementaire","text":""},{"location":"SNT/Photographie_Numerique/sommaire/","title":"Sommaire","text":"<ul> <li>cours</li> <li>travaux diriger</li> <li>travaux pratique</li> <li>exercice complementaire</li> </ul>"},{"location":"SNT/Photographie_Numerique/travaux_pratique/","title":"travaux pratique","text":""},{"location":"SNT/Programmation_Python/evaluation/","title":"\u00e9valuation","text":""},{"location":"SNT/Programmation_Python/evaluation/#premier-exercice","title":"premier exercice:","text":"<pre><code>def mystere_1(a:int,b:int)-&gt;int:\n    resultat = a\n    while b != 0:\n        resultat = resultat + 1\n        b = b-1\n    return resultat\n\ndef mystere_2(a:int,b:int)-&gt;int:\n    resultat = 0\n    while b != 0:\n        resultat = resultat + a\n        b = b-1\n    return resultat\n\ndef mystere_3(a:int,b:int)-&gt;int:\n    resultat = a\n    while b!=0:\n        resultat = resultat * a\n        b = b-1\n    return resultat\n</code></pre> <ol> <li>comment s'appelle les differente fnctions declarer ici</li> <li>quelles sont les parametres de ces fonctions</li> <li>de quelle type sont ces parametre</li> <li>de quelle type vont etre les resultats de ces fonctions</li> <li>pour chaque fonctions donner se qui va etre stocker dans la variable a \u00e0 la premiere ligne</li> <li>quelle est la conditions pour que la boucle while s'arrete</li> <li>comment evolue le resultat a chaque iterations(tours) de la boucle</li> <li>finalement que font les fonctions </li> </ol>"},{"location":"SNT/Programmation_Python/evaluation/#second-exercice","title":"second exercice:","text":""},{"location":"SNT/Programmation_Python/exercice_comp/","title":"Exercices pratiques","text":"<p>1. Variables et affichage <p>Cr\u00e9er deux variables, nom et \u00e2ge, puis afficher :</p> <pre><code>Bonjour &lt;nom&gt;, dans 10 ans tu auras &lt;\u00e2ge + 10&gt; ans.\n</code></pre> <p>2. Op\u00e9rations math\u00e9matiques <p>\u00c9crivez un programme qui demande deux nombres \u00e0 l\u2019utilisateur et affiche :</p> <ul> <li>la somme</li> <li>la diff\u00e9rence</li> <li>le produit</li> </ul> <p>3. Conditions <p>\u00c9crire un programme qui cr\u00e9e une variable note et affiche :</p> <ul> <li><code>\"Tr\u00e8s bien\"</code> si la note \u2265 16</li> <li><code>\"Assez bien\"</code> si la note \u2265 12</li> <li><code>\"Passable\"</code> si la note \u2265 10</li> <li><code>\"Insuffisant\"</code> sinon</li> </ul> <p>4. Boucles <p>Affichez tous les nombres pairs de 1 \u00e0 20 en utilisant une boucle <code>for</code> Voici une version claire et p\u00e9dagogique de ta phrase, avec une explication du modulo incluse \ud83d\udc47</p> <p>\ud83d\udca1 Indice : l\u2019op\u00e9rateur <code>%</code> s\u2019appelle le modulo. Il donne le reste d\u2019une division entre deux nombres.</p> <p>Par exemple :</p> <ul> <li><code>7 % 2 = 1</code> car 7 \u00f7 2 = 3 reste 1</li> <li><code>8 % 2 = 0</code> car 8 \u00f7 2 = 4 reste 0</li> </ul> <p>\ud83d\udc49 Donc, si un nombre % 2 est \u00e9gal \u00e0 0, cela signifie qu\u2019il est pair (car il est divisible par 2 sans reste).</p> <p>5. Fonctions <p>cr\u00e9ez une fonction <code>carre(x)</code> qui renvoie le carr\u00e9 d\u2019un nombre.</p> <p>Testez-la avec plusieurs nombres et affichez les r\u00e9sultats.</p>"},{"location":"SNT/Programmation_Python/exercice_comp/#exercie-complementaire-calcul-de-moyenne","title":"exercie compl\u00e9mentaire: calcul de moyenne","text":"<ol> <li>Demandez \u00e0 l\u2019utilisateur combien de notes il veut entrer.</li> <li>Utilisez une boucle pour demander chaque note une par une. (indice: utilisez <code>input</code>)</li> <li> <p>\u00c0 chaque note saisie :</p> </li> <li> <p>ajoutez-la \u00e0 un total pour calculer la moyenne</p> </li> <li> <p>v\u00e9rifiez si elle est sup\u00e9rieure \u00e0 la moyenne courante (facultatif pour avancer pas \u00e0 pas).</p> </li> <li> <p>Cr\u00e9ez une fonction <code>mention(note)</code> qui renvoie :</p> </li> <li> <p><code>\"Tr\u00e8s bien\"</code> si la note \u2265 16</p> </li> <li><code>\"Assez bien\"</code> si la note \u2265 12</li> <li><code>\"Passable\"</code> si la note \u2265 10</li> <li> <p><code>\"Insuffisant\"</code> sinon</p> </li> <li> <p>Apr\u00e8s la saisie de toutes les notes, calculez la moyenne et affichez la mention correspondante.</p> </li> <li> <p>Affichez ensuite combien de notes sont sup\u00e9rieures \u00e0 la moyenne.</p> </li> </ol> <p>Exemple d\u2019ex\u00e9cution :</p> <pre><code>Combien de notes ? 5\nNote 1 : 14\nNote 2 : 18\nNote 3 : 9\nNote 4 : 12\nNote 5 : 16\n\nMoyenne : 13.8 \u2192 Assez bien\nNombre de notes sup\u00e9rieures \u00e0 la moyenne : 3\n</code></pre>"},{"location":"SNT/Programmation_Python/fiche_memo/","title":"\ud83d\udc0d Fiche M\u00e9mo Python","text":""},{"location":"SNT/Programmation_Python/fiche_memo/#variables","title":"\ud83d\udd39 Variables","text":"<pre><code>x = 10\nnom = \"Alice\"\npi = 3.14\nvrai = True\n\nx = x - 1\n</code></pre> <p>\ud83d\udc49 Une variable sert \u00e0 stocker une valeur (nombre, texte, bool\u00e9en\u2026). \ud83d\udc49 Il est possible de modifier une variable.</p>"},{"location":"SNT/Programmation_Python/fiche_memo/#conditions","title":"\ud83d\udd39 Conditions","text":"<pre><code>age = 18\n\nif age &gt;= 18:\n    print(\"Majeur\")\nelif age &gt; 12:\n    print(\"Adolescent\")\nelse:\n    print(\"Enfant\")\n</code></pre> <p>\ud83d\udc49 Les conditions permettent d\u2019ex\u00e9cuter du code seulement si une r\u00e8gle est respect\u00e9e. \ud83d\udc49 Comparaisons possibles : <code>==</code> (\u00e9gal), <code>!=</code> (diff\u00e9rent), <code>&lt;</code> (plus petit), <code>&gt;</code> (plus grand), <code>&lt;=</code> (plus petit ou \u00e9gal), <code>&gt;=</code> (plus grand ou \u00e9gal). \ud83d\udc49 Une fois une condition valid\u00e9e, Python n\u2019examine plus les suivantes.</p>"},{"location":"SNT/Programmation_Python/fiche_memo/#boucle-for","title":"\ud83d\udd39 Boucle <code>for</code>","text":"<pre><code>for i in range(5):   # de 0 \u00e0 4\n    print(i)\n</code></pre> <p>\ud83d\udc49 Une boucle r\u00e9p\u00e8te un bloc de code plusieurs fois. \ud83d\udc49 <code>range(n)</code> fait tourner la boucle n fois. \ud83d\udc49 <code>i</code> est la variable de boucle qui change \u00e0 chaque tour. \ud83d\udc49 <code>i</code> commence \u00e0 0 et \u00e9volue de 1 en 1 \u00e0 chaque tour de boucle.</p>"},{"location":"SNT/Programmation_Python/fiche_memo/#fonctions","title":"\ud83d\udd39 Fonctions","text":"<pre><code>def ajoute_un(nombre):\n    return nombre + 1 \n\nprint(ajoute_un(5))   # affiche 6\n</code></pre> <p>\ud83d\udc49 Une fonction est un bloc de code r\u00e9utilisable. \ud83d\udc49 Une fonction peut prendre des param\u00e8tres. \ud83d\udc49 Une fonction peut renvoyer un r\u00e9sultat. \ud83d\udc49 Ici, la fonction s\u2019appelle <code>ajoute_un</code>, elle prend un nombre en param\u00e8tre et renvoie ce nombre + 1.</p>"},{"location":"SNT/Programmation_Python/introductions_prog/","title":"Introductions \u00e0 la programmation","text":""},{"location":"SNT/Programmation_Python/introductions_prog/#introduction","title":"Introduction","text":"<p>Lors de vos ann\u00e9es au coll\u00e8ge, vous avez programm\u00e9 en utilisant la programmation par blocs. Bien que ce type de langage ait des avantages pour comprendre les bases de la programmation, il reste limit\u00e9.</p> <p>C\u2019est pour cela qu\u2019au lyc\u00e9e, nous allons utiliser la programmation en Python. Ce langage n\u2019est pas exclusif \u00e0 la SNT, mais est \u00e9galement utilis\u00e9 en math\u00e9matiques, en physique-chimie et en NSI.</p>"},{"location":"SNT/Programmation_Python/introductions_prog/#python-cest-bien","title":"Python, c\u2019est bien \ud83d\udc4d","text":"<p>Il est possible de r\u00e9aliser l\u2019ensemble des choses effectu\u00e9es avec Scratch dans Python (comme dans l\u2019exemple ci-dessous), et bien plus encore !</p> <p></p>"},{"location":"SNT/Programmation_Python/introductions_prog/#la-programmation-en-2-mots","title":"La programmation en 2 mots","text":"<p>rappel: La programmation, c\u2019est dire \u00e0 un ordinateur quoi faire en utilisant un langage qu\u2019il peut comprendre. Un programme est donc une suite d\u2019instructions que la machine ex\u00e9cute pas \u00e0 pas.</p> <p>\ud83d\udc49 Exemple tr\u00e8s simple en Python :</p> <pre><code>print(\"Bonjour !\")\n</code></pre> <p>Ici, l\u2019ordinateur affichera le texte Bonjour ! \u00e0 l\u2019\u00e9cran.</p> <p>La programmation permet de :</p> <ul> <li>Automatiser des t\u00e2ches (r\u00e9p\u00e9ter rapidement ce qui serait long \u00e0 faire \u00e0 la main).</li> <li>Cr\u00e9er des dessins, des jeux, des applications, etc.</li> <li>R\u00e9soudre des probl\u00e8mes en traduisant une id\u00e9e en suite d\u2019instructions.</li> </ul> <p>\u26a1 Retenez :</p> <ul> <li>L\u2019ordinateur ne r\u00e9fl\u00e9chit pas tout seul \u2192 il fait exactement ce qu\u2019on lui dit.</li> <li>La programmation, c\u2019est comme apprendre une nouvelle langue pour dialoguer avec lui.</li> </ul> <p>commentaire</p> <p>\u26a0\ufe0f Dans la suite de cette introduction, vous verrez dans les codes propos\u00e9s le symbole # diss\u00e9min\u00e9 un peu partout.</p> <p>Ce symbole indique un commentaire, c\u2019est-\u00e0-dire une indication destin\u00e9e au lecteur du programme.</p> <p>Un commentaire sert uniquement \u00e0 expliquer le code : il n\u2019a aucune influence sur l\u2019ex\u00e9cution du programme.</p>"},{"location":"SNT/Programmation_Python/introductions_prog/#turtle","title":"Turtle","text":"<p>Il est possible, dans Python, d\u2019importer ce que l\u2019on appelle des modules. Ces modules sont des programmes cr\u00e9\u00e9s par d\u2019autres utilisateurs, permettant d\u2019avoir acc\u00e8s \u00e0 de nouvelles possibilit\u00e9s.</p> <p>Aujourd\u2019hui, nous allons utiliser le module Turtle, qui va nous permettre de dessiner en utilisant Python.</p> <p>Histoire de Turtle</p> <p>Le module Turtle est inspir\u00e9 d\u2019un langage de programmation \u00e0 but \u00e9ducatif nomm\u00e9 Logo, cr\u00e9\u00e9 en 1967.  </p> <p>Ce langage permettait de dessiner \u00e0 l\u2019aide d\u2019une tortue sur une feuille num\u00e9rique.  </p> <p>Tomb\u00e9 en d\u00e9su\u00e9tude aujourd\u2019hui, Logo a n\u00e9anmoins \u00e9t\u00e9 repris bien des ann\u00e9es plus tard dans Python afin de pouvoir, comme \u00e0 l\u2019\u00e9poque, introduire la programmation aux d\u00e9butants.  </p>"},{"location":"SNT/Programmation_Python/introductions_prog/#mise-en-place","title":"Mise en place","text":"<p>Afin de pouvoir utiliser Turtle et programmer, il nous faut une application permettant d\u2019\u00e9crire notre programme. Durant cette ann\u00e9e, nous allons utiliser l\u2019application Thonny, pr\u00e9sente sur votre bureau.</p> <p>thonny</p> <p>Thonny est un logiciel pour programmer en Python, tr\u00e8s utilis\u00e9 en SNT car il est simple :</p> <ul> <li> <p>on \u00e9crit le code dans l\u2019\u00e9diteur,</p> </li> <li> <p>on lance avec \u25b6 et le r\u00e9sultat appara\u00eet dans la console,</p> </li> <li> <p>On peut suivre pas \u00e0 pas l\u2019ex\u00e9cution et voir les variables changer \u00e0 l\u2019aide du d\u00e9bogueur (nous verrons plus tard cet outil).</p> </li> <li> <p>On peut sauvegarder et charger des codes faits pr\u00e9c\u00e9demment.</p> </li> </ul> <p>Commen\u00e7ons tout d\u2019abord par importer notre module turtle avec la commande :</p> <pre><code>from turtle import *\n</code></pre> <p>Cette commande signifie que l\u2019on veut importer tout (symbolis\u00e9 par <code>*</code>) depuis le module turtle.</p> <p>Nous allons ensuite afficher la feuille sur laquelle nous ferons se d\u00e9placer notre tortue avec le code suivant :</p> <pre><code>from turtle import *\n\nreset()\n</code></pre> <p>Nous sommes maintenant pr\u00eats \u00e0 dessiner pour la suite de cette activit\u00e9.</p>"},{"location":"SNT/Programmation_Python/introductions_prog/#possibilites","title":"Possibilit\u00e9s","text":"<p>Avancer :</p> <pre><code>forward(100)\n# avec 100 correspondant \u00e0 la longueur du trait\n</code></pre> <p>Tourner \u00e0 gauche :</p> <pre><code>left(90)\n# avec 90 correspondant \u00e0 l\u2019angle que va prendre la tortue\n</code></pre> <p>Tourner \u00e0 droite :</p> <pre><code>right(90)\n# avec 90 correspondant \u00e0 l\u2019angle que va prendre la tortue\n</code></pre> <p>Changer la couleur :</p> <pre><code>color(\"blue\")\n# avec \"blue\" correspondant \u00e0 la couleur (en anglais) utilis\u00e9e par la tortue pour dessiner la suite\n</code></pre> <p>activit\u00e9 1</p> <p>R\u00e9alisez l\u2019image suivante, o\u00f9 l\u2019ensemble des traits est de longueur 100 \u00e0 l'aide de Turtle.  </p> <p> </p>"},{"location":"SNT/Programmation_Python/introductions_prog/#variables","title":"Variables","text":"<p>Afin d\u2019\u00e9viter de r\u00e9p\u00e9ter plusieurs fois le m\u00eame nombre dans notre code, on utilise ce que l\u2019on appelle des variables. Ces variables permettent de stocker une donn\u00e9e (une information).</p> <p>Exemple :</p> <pre><code>x = 100\n</code></pre> <p>Ces variables ont \u00e9galement la possibilit\u00e9 d\u2019\u00eatre modifi\u00e9es.</p> <p>Exemple :</p> <pre><code>x = 100\nx = x - 1\n</code></pre> <p>Enfin, il est possible d\u2019utiliser les variables dans les fonctions (nous reviendrons sur ce terme plus tard) vues pr\u00e9c\u00e9demment.</p> <p>Exemple :</p> <pre><code>x = 100\nforward(x)\n</code></pre> <p>activit\u00e9 2</p> <p>R\u00e9alisez l\u2019image suivante, o\u00f9 le premier trait est \u00e9gal \u00e0 10 et double \u00e0 chaque nouveau trait \u00e0 l'aide de Turtle.  </p> <p> </p> <p>Indice : la multiplication entre deux nombres s\u2019effectue avec l\u2019op\u00e9rateur <code>*</code> </p> <p>activit\u00e9 3</p> <p>Tu viens de souscrire \u00e0 un abonnement t\u00e9l\u00e9phonique pour ton t\u00e9l\u00e9phone portable. Chaque mois, l\u2019op\u00e9rateur te facture :</p> <ul> <li>Frais fixes mensuels : 10 \u20ac</li> <li>Prix par minute d\u2019appel : 0,05 \u20ac</li> <li>Prix par SMS : 0,02 \u20ac</li> </ul> <p>Tu souhaites savoir combien va te co\u00fbter ton forfait en fonction de ton utilisation. Pour cela, tu d\u00e9cides de faire un petit programme Python.</p> <ol> <li> <p>D\u00e9finis des variables pour repr\u00e9senter :</p> <ul> <li>le nombre de minutes (<code>minutes</code>) \u00e9gales \u00e0 0</li> <li>le nombre de SMS (<code>sms</code>) \u00e9gales \u00e0 0</li> </ul> </li> <li> <p>\u00c9cris une formule (ou un petit programme Python) qui calcule le co\u00fbt total du mois en fonction de ces variables.</p> </li> <li> <p>Calcule le co\u00fbt pour :</p> <ul> <li>120 minutes et 50 SMS</li> <li>300 minutes et 10 SMS</li> </ul> </li> </ol> <p>activit\u00e9 4</p> <p>On consid\u00e8re le programme suivant :</p> <pre><code>distance = 150   # en kilom\u00e8tres\ntemps = 3        # en heures\nvitesse = distance / temps\nprint(\"La vitesse moyenne est de\", vitesse, \"km/h\")\n</code></pre>"},{"location":"SNT/Programmation_Python/introductions_prog/#questions","title":"Questions","text":"<ol> <li>Quelle est la valeur de la variable <code>distance</code> ?</li> <li>Quelle est la valeur de la variable <code>temps</code> ?</li> <li>Quelle op\u00e9ration est effectu\u00e9e pour calculer la variable <code>vitesse</code> ?</li> <li>Quelle est la valeur finale de <code>vitesse</code> ?</li> <li>Quel sera le message affich\u00e9 par le programme ?</li> </ol>"},{"location":"SNT/Programmation_Python/introductions_prog/#conditions","title":"Conditions","text":"<p>En Python (et en informatique en g\u00e9n\u00e9ral), il est possible de faire des choix entre plusieurs possibilit\u00e9s. Pour cela, on utilise ce qu\u2019on appelle des conditions.</p> <p>Mais avant d\u2019aller plus loin, il faut comprendre une notion tr\u00e8s importante : les bool\u00e9ens.</p> <p>Un bool\u00e9en est une valeur logique qui ne peut \u00eatre que :</p> <ul> <li> <p>True (vrai)</p> </li> <li> <p>False (faux)</p> </li> </ul> <p>C\u2019est une r\u00e9ponse \u00e0 une question ferm\u00e9e</p> <p>exemple :</p> <p>Est-ce que 5 est plus grand que 3 ? \u2192 True</p> <p>Est-ce que 10 est plus petit que 2 ? \u2192 False</p> <p>En Python, on peut tester cela directement avec les operateurs utilis\u00e9 en math\u00e9matique.</p> <p>exemple :</p> <pre><code>print(5 &gt; 3)    # Affiche True\nprint(10 &lt; 2)   # Affiche False\nprint(100 == 100)  # Affiche True\n</code></pre> <p>Ici, les symboles comme &gt;, &lt; ou == sont appel\u00e9s op\u00e9rateurs de comparaison.</p> <p>Ils permettent de comparer deux valeurs et de renvoyer un bool\u00e9en (True ou False).</p> <p>activit\u00e9 5 :</p> <p>Pour chaque proposition suivante, dis si elle est vraie ou fausse :</p> <ol> <li> <p><code>100 &gt; 99</code></p> </li> <li> <p><code>100 &lt; 99</code></p> </li> <li> <p><code>100 &gt; 100</code></p> </li> <li> <p><code>100 == 99</code></p> </li> </ol> <p>Une condition en Python s\u2019\u00e9crit avec un mot-cl\u00e9 suivi d\u2019un bool\u00e9en (ou d\u2019une expression qui produit un bool\u00e9en).</p> <p>La syntaxe est la suivante :</p> <pre><code>if condition_1:\n    # faire cette partie\nelif condition_2:\n    # faire cette partie\nelse:\n    # faire cette partie\n</code></pre> <p>Trois termes sont utilis\u00e9s ici :</p> <ul> <li> <p>if : signifie si en fran\u00e7ais.   \u2192 Si la condition qui suit est vraie, alors la partie en dessous est ex\u00e9cut\u00e9e.</p> </li> <li> <p>elif : signifie sinon si en fran\u00e7ais.   \u2192 Si la condition pr\u00e9c\u00e9dente est fausse et que la condition qui suit est vraie, alors la partie en dessous est ex\u00e9cut\u00e9e.</p> </li> <li> <p>else : signifie sinon en fran\u00e7ais.   \u2192 Si toutes les conditions pr\u00e9c\u00e9dentes sont fausses, alors la partie en dessous est ex\u00e9cut\u00e9e.</p> </li> </ul> <p>Exemple :</p> <pre><code>x = 100\nif x &lt; 20:\n    print(\"x est inf\u00e9rieur \u00e0 20\")\nelif x &gt; 20:\n    print(\"x est sup\u00e9rieur \u00e0 20\")\nelse:\n    print(\"x est \u00e9gal \u00e0 20\")\n</code></pre> <p>Essayez ce programme en modifiant la valeur de <code>x</code> pour comprendre comment fonctionnent les conditions.</p> <p>activit\u00e9 6</p> <p>\u00c9cris un programme en Python qui :</p> <ol> <li>Demande \u00e0 l\u2019utilisateur de saisir son \u00e2ge (utilise <code>input()</code>).</li> <li>Si l\u2019\u00e2ge est sup\u00e9rieur ou \u00e9gal \u00e0 18, affiche :</li> </ol> <p><pre><code>Tu es majeur.\n</code></pre> 3. Sinon, affiche :</p> <pre><code>Tu es mineur.\n</code></pre> <p>activit\u00e9 7</p> <p>On consid\u00e8re le programme suivant :</p> <pre><code>note = 14\n\nif note &gt;= 16:\n    print(\"Mention Tr\u00e8s Bien\")\nelif note &gt;= 14:\n    print(\"Mention Bien\")\nelif note &gt;= 12:\n    print(\"Mention Assez Bien\")\nelif note &gt;= 10:\n    print(\"Mention Passable\")\nelse:\n    print(\"\u00c9chec\")\n</code></pre> <p>Activit\u00e9 8</p> <p>\u00c9cris un programme en Python en utilisant Turtle qui :  </p> <ol> <li>D\u00e9clare une variable <code>x</code> \u00e9gale \u00e0 100.  </li> <li>Dessine un trait de longueur <code>x</code> puis tourne \u00e0 gauche.  </li> <li>Ajoute 10 \u00e0 <code>x</code>.  </li> <li>Si <code>x</code> est sup\u00e9rieur \u00e0 110, change la couleur de la tortue en rouge (<code>\"red\"</code>).  </li> <li>Recommence \u00e0 partir de l\u2019\u00e9tape 2 pour le faire 10 fois (en utilisant du copier-coller).  </li> </ol>"},{"location":"SNT/Programmation_Python/introductions_prog/#exemple-dexecution","title":"Exemple d\u2019ex\u00e9cution","text":"<pre><code>Entre ton \u00e2ge : 16\nTu es mineur.\n</code></pre> <pre><code>Entre ton \u00e2ge : 20\nTu es majeur.\n</code></pre>"},{"location":"SNT/Programmation_Python/introductions_prog/#aide","title":"Aide","text":"<ul> <li>Utilise la fonction <code>input()</code> de ma maniere suivante: input(\"Entre ton \u00e2ge : \") pour pouvoir interroger l'utilisateur.</li> <li>Utilise une condition <code>if</code> et <code>else</code>.</li> </ul>"},{"location":"SNT/Programmation_Python/introductions_prog/#questions_1","title":"Questions","text":"<ol> <li>Quelle est la valeur de la variable <code>note</code> au d\u00e9but du programme ?</li> <li>Quelle est la premi\u00e8re condition test\u00e9e par le programme ? Est-elle vraie ou fausse ici ?</li> <li>Quelle condition sera vraie dans ce cas pr\u00e9cis ?</li> <li>Quel sera le message affich\u00e9 par le programme ?</li> <li>Que se passerait-il si <code>note = 9</code> ?</li> </ol>"},{"location":"SNT/Programmation_Python/introductions_prog/#boucles","title":"Boucles","text":"<p>Supposons que l\u2019on veuille effectuer plusieurs fois la m\u00eame action : il est possible d\u2019utiliser une boucle. Celle-ci nous permet de ne pas \u00e9crire plusieurs fois la m\u00eame chose.</p> <p>Par exemple, le code suivant :</p> <pre><code>reset()\nx = 100\n\nforward(x)\nleft(90)\nforward(x)\nright(90)\n\nforward(x)\nleft(90)\nforward(x)\nright(90)\n\nforward(x)\nleft(90)\nforward(x)\nright(90)\n</code></pre> <p>peut \u00eatre remplac\u00e9 par :</p> <pre><code>reset()\nx = 100\nfor i in range(3):\n    forward(x)\n    left(90)\n    forward(x)\n    right(90)\n</code></pre> <p>activit\u00e9 9</p> <p>R\u00e9alisez l\u2019image suivante en utilisant une boucle <code>for</code> \u00e0 l'aide de Turtle.  </p> <p> </p> <p>activit\u00e9 10</p> <p>On consid\u00e8re le programme suivant :</p> <pre><code>for i in range(4):\n    print(\"SNT est g\u00e9nial !\")\n</code></pre> <p>Regardons maintenant de plus pr\u00e8s la ligne suivante :</p> <pre><code>for i in range(3):\n</code></pre> <ul> <li> <p><code>range(n)</code> cr\u00e9e un ensemble d\u2019\u00e9l\u00e9ments partant de 0 jusqu\u2019\u00e0 <code>n-1</code>.   \u2192 Dans l\u2019exemple pr\u00e9c\u00e9dent, <code>range(3)</code> cr\u00e9e les \u00e9l\u00e9ments 0, 1, 2.</p> </li> <li> <p>La boucle se lance, et la variable <code>i</code> (appel\u00e9e indice) va prendre successivement les valeurs cr\u00e9\u00e9es par <code>range(n)</code>.</p> </li> </ul> <p>Dans l\u2019exemple pr\u00e9c\u00e9dent, cela donne :</p> Position dans le code Valeur de <code>i</code> Avant d\u2019entrer dans la boucle 1\u02b3\u1d49 it\u00e9ration (tour) 0 2\u1d49 it\u00e9ration (tour) 1 3\u1d49 it\u00e9ration (tour) 2 Une fois sorti de la boucle <p>Il est possible d\u2019utiliser <code>i</code> comme une variable au sein de la boucle, comme dans l\u2019exemple suivant :</p> <pre><code>resultat = 0\nfor i in range(10):\n    resultat = resultat + i\n</code></pre> <p>Ici, <code>resultat</code> va \u00eatre \u00e9gal \u00e0 la somme des \u00e9l\u00e9ments de 0 \u00e0 9 (10 \u00e9tant exclu), soit :</p> <p> </p> <p>activit\u00e9 11</p> <p>R\u00e9alisez l\u2019image suivante en utilisant une boucle <code>for</code> et en exploitant la variable <code>i</code> \u00e0 l'aide de Turtle.  </p> <p> </p> <p>activit\u00e9 12</p> <p>\u00c9cris un programme en Python qui :</p> <ol> <li>Affiche les nombres de 1 \u00e0 5.</li> <li>Pour chaque nombre, affiche aussi son carr\u00e9 (le nombre multipli\u00e9 par lui-m\u00eame).</li> </ol> <p>Le r\u00e9sultat attendu doit \u00eatre de la forme :</p> <pre><code>Le carr\u00e9 de 1 est 1\nLe carr\u00e9 de 2 est 4\nLe carr\u00e9 de 3 est 9\nLe carr\u00e9 de 4 est 16\nLe carr\u00e9 de 5 est 25\n</code></pre>"},{"location":"SNT/Programmation_Python/introductions_prog/#questions_2","title":"Questions","text":"<ol> <li>Combien de fois la boucle s\u2019ex\u00e9cute-t-elle ?</li> <li>Quelle est la phrase affich\u00e9e par le programme ?</li> <li>Recopie exactement ce que le programme affichera \u00e0 l\u2019\u00e9cran (ligne par ligne).</li> </ol>"},{"location":"SNT/Programmation_Python/introductions_prog/#aide_1","title":"Aide","text":"<ul> <li>Utilise une boucle <code>for</code> avec <code>range(1, 6)</code>.</li> <li>Utilise une variable (par exemple <code>carre</code>) pour stocker le r\u00e9sultat du calcul.</li> <li>Utilise <code>print()</code> pour afficher le texte au format suivant <code>print(\"le carr\u00e9 de\",?,\"est\",?)</code> en remplacant les ?</li> </ul>"},{"location":"SNT/Programmation_Python/introductions_prog/#fonctions","title":"Fonctions","text":"<p>Pour conclure cette partie, Python permet la cr\u00e9ation et l\u2019utilisation de fonctions, qui sont des blocs de code r\u00e9utilisables plusieurs fois par la suite.</p> <p>Si, par exemple, je voulais \u00e9crire quelque chose comme :</p> <pre><code>forward(10)\nleft(90)\nforward(10)\nright(90)\n\ncolor('blue')\n\nforward(10)\nleft(90)\nforward(10)\nright(90)\n\ncolor('red')\n\nforward(10)\nleft(90)\nforward(10)\nright(90)\n</code></pre> <p>On pourrait cr\u00e9er une fonction de la forme suivante :</p> <pre><code>def fonction_1():\n    forward(10)\n    left(90)\n    forward(10)\n    right(90)\n</code></pre> <p>Cette fonction porte le nom de <code>fonction_1</code>, et nous pouvons ensuite l\u2019utiliser dans notre code :</p> <pre><code>def fonction_1():\n    forward(10)\n    left(90)\n    forward(10)\n    right(90)\n\nfonction_1()\ncolor('blue')\nfonction_1()\ncolor('red')\nfonction_1()\n</code></pre> <p>activit\u00e9 13</p> <p>Cr\u00e9ez une fonction <code>carre</code> qui dessine un carr\u00e9 dont les c\u00f4t\u00e9s sont de longueur 100, puis utilisez-la afin de refaire l\u2019image suivante \u00e0 l'aide de Turtle:  </p> <p> </p> <p>activit\u00e9 14</p> <p>On consid\u00e8re le programme suivant :</p> <pre><code>def message_bienvenue():\n    print(\"Bienvenue en SNT !\")\n    print(\"Amuse-toi bien avec le code !\")\n\nmessage_bienvenue()\nmessage_bienvenue()\n</code></pre> <p>Il est \u00e9galement possible d\u2019utiliser une autre fonctionnalit\u00e9 des fonctions : les param\u00e8tres.</p> <p>Reprenons la fonction faite pr\u00e9c\u00e9demment :</p> <pre><code>def fonction_1():\n    forward(10)\n    left(90)\n    forward(10)\n    right(90)\n</code></pre> <p>On veut maintenant pr\u00e9ciser la longueur des traits lorsque l\u2019on utilise la fonction. Pour cela, on va cr\u00e9er un param\u00e8tre <code>longueur</code> dans notre fonction :</p> <pre><code>def fonction_2(longueur):\n    forward(longueur)\n    left(90)\n    forward(longueur)\n    right(90)\n</code></pre> <p>Nous pouvons maintenant l\u2019utiliser en appelant la fonction avec une valeur :</p> <pre><code>def fonction_2(longueur):\n    forward(longueur)\n    left(90)\n    forward(longueur)\n    right(90)\n\nfonction_2(50)\ncolor('blue')\nfonction_2(100)\ncolor('red')\nfonction_2(200)\n</code></pre> <p>Enfin, il est possible d\u2019utiliser plusieurs param\u00e8tres en m\u00eame temps :</p> <pre><code>def fonction_3(longueur, angle):\n    forward(longueur)\n    left(angle)\n    forward(longueur)\n    right(angle)\n\nfonction_3(100, 90)\n</code></pre> <p>activit\u00e9 15</p> <p>Reprenez votre fonction <code>carre</code> cr\u00e9\u00e9e pr\u00e9c\u00e9demment en y ajoutant un param\u00e8tre pour la longueur des c\u00f4t\u00e9s. \u00c9crivez ensuite un code permettant de refaire l\u2019image suivante \u00e0 l'aide de Turtle :  </p> <p> </p> <p>activit\u00e9 16</p> <ol> <li> <p>\u00c9cris une fonction appel\u00e9e <code>carre</code> qui :</p> <ul> <li>prend un nombre en entr\u00e9e,</li> <li>renvoie le carr\u00e9 de ce nombre.</li> </ul> </li> <li> <p>Ensuite, utilise cette fonction pour :</p> <ul> <li>calculer le carr\u00e9 de 5,</li> <li>afficher le r\u00e9sultat avec <code>print()</code>.</li> </ul> </li> </ol>"},{"location":"SNT/Programmation_Python/introductions_prog/#questions_3","title":"Questions","text":"<ol> <li>Quel est le nom de la fonction d\u00e9finie dans ce programme ?</li> <li>Cette fonction prend-elle des param\u00e8tres ?</li> <li>Que fait cette fonction lorsqu\u2019elle est appel\u00e9e ?</li> <li>Combien de fois la fonction est-elle ex\u00e9cut\u00e9e ici ?</li> <li>Que sera affich\u00e9 exactement \u00e0 l\u2019\u00e9cran apr\u00e8s l\u2019ex\u00e9cution compl\u00e8te du programme ?</li> </ol>"},{"location":"SNT/Programmation_Python/introductions_prog/#exemple-dexecution-attendue","title":"Exemple d\u2019ex\u00e9cution attendue","text":"<pre><code>Le carr\u00e9 de 5 est 25\n</code></pre>"},{"location":"SNT/Programmation_Python/introductions_prog/#aide_2","title":"Aide","text":"<ul> <li>Une fonction se d\u00e9finit avec <code>def nom_de_fonction(parametre):</code></li> <li>Pour renvoyer une valeur, utilise <code>return</code>.</li> <li>Exemple de structure :</li> </ul> <pre><code>def carre(nombre):\n    # calcul du carr\u00e9\n    return ...\n</code></pre>"},{"location":"SNT/Programmation_Python/introductions_prog/#pour-allee-plus-loin","title":"pour all\u00e9e plus loin","text":"<p>activit\u00e9 complementaire</p> <p>reproduisez les dessins suivants:</p> <p> </p>"},{"location":"SNT/Programmation_Python/mini_projet/","title":"\ud83c\udfd7\ufe0f Mini-projet Turtle : Construis ta ville \ud83c\udfd9\ufe0f","text":"<p>Bienvenue dans ton mini-projet Turtle ! \ud83d\udc22\ud83d\udcbb</p> <p>Aujourd\u2019hui, vous allez cr\u00e9er votre propre ville \u00e9tape par \u00e9tape. Vous allez utiliser tout ce que vous avez appris sur les boucles, les fonctions et les variables pour construire une ville avec des maisons, une route et peut-\u00eatre m\u00eame des arbres ou un soleil.</p>"},{"location":"SNT/Programmation_Python/mini_projet/#etape-1-dessiner-une-maison","title":"\u00c9tape 1 : Dessiner une maison \ud83c\udfe0","text":"<p>On commence par une maison simple : un carr\u00e9 pour les murs et un triangle pour le toit.</p>"},{"location":"SNT/Programmation_Python/mini_projet/#ce-que-vous-devez-faire","title":"Ce que vous devez faire :","text":"<ol> <li>Compl\u00e9tez la fonction <code>carre(cote)</code> pour dessiner un carr\u00e9.</li> <li>Compl\u00e9tez la fonction <code>triangle(cote)</code> pour dessiner un triangle \u00e9quilat\u00e9ral.</li> <li>Cr\u00e9ez ensuite une fonction <code>maison(cote)</code> qui combine le carr\u00e9 et le triangle pour former une maison.</li> </ol> <p>\ud83d\udca1 Astuce : utilisez les boucles <code>for</code> pour dessiner les c\u00f4t\u00e9s plus facilement.</p>"},{"location":"SNT/Programmation_Python/mini_projet/#etape-2-construire-une-route","title":"\u00c9tape 2 : Construire une route \ud83d\udee3\ufe0f","text":"<p>Maintenant, ajoutons une route sous votre maison.</p>"},{"location":"SNT/Programmation_Python/mini_projet/#ce-que-vous-devez-faire_1","title":"Ce que vous devez faire :","text":"<ol> <li>Compl\u00e9tez la fonction <code>rectangle(longueur, largeur)</code> pour dessiner un rectangle (la route).</li> <li>Ajoutez des bandes blanches au milieu de la route en utilisant une boucle et les fonctions <code>penup()</code> et <code>pendown()</code>.</li> </ol> <p>\ud83d\udca1 Astuce : vous pouvez r\u00e9p\u00e9ter plusieurs petits rectangles blancs pour faire les bandes.</p>"},{"location":"SNT/Programmation_Python/mini_projet/#etape-3-construire-une-ville","title":"\u00c9tape 3 : Construire une ville \ud83c\udfd9\ufe0f","text":"<p>Maintenant que vous savez dessiner des maisons et une route, vous allez cr\u00e9er une vraie ville !</p>"},{"location":"SNT/Programmation_Python/mini_projet/#ce-que-vous-devez-faire_2","title":"Ce que vous devez faire :","text":"<ol> <li>Compl\u00e9tez la fonction <code>ville(nb_maisons)</code> pour placer plusieurs maisons avec diff\u00e9rentes tailles et couleurs.</li> <li>Ajoutez une route principale.</li> <li>(Optionnel) Ajoutez des d\u00e9tails comme des arbres \ud83c\udf33, des immeubles \ud83c\udfe2 ou un soleil \u2600\ufe0f.</li> </ol> <p>\ud83d\udca1 Astuce : utilisez vos fonctions pour organiser votre code et des boucles pour r\u00e9p\u00e9ter des maisons ou d\u2019autres \u00e9l\u00e9ments.</p>"},{"location":"SNT/Programmation_Python/mini_projet/#votre-squelette-de-code","title":"Votre squelette de code \ud83d\udcdd","text":"<p>Voici le code de d\u00e9part avec toutes les fonctions \u00e0 compl\u00e9ter :</p> <pre><code>from turtle import *\n\n# -------------------------------\n# Fonctions de base\n# -------------------------------\n\ndef carre(cote):\n    \"\"\"\n    Dessine un carr\u00e9 dont les c\u00f4t\u00e9s mesurent 'cote'.\n    Compl\u00e9tez cette fonction !\n    \"\"\"\n    pass  # \u00c0 remplacer par votre code\n\ndef triangle(cote):\n    \"\"\"\n    Dessine un triangle \u00e9quilat\u00e9ral dont les c\u00f4t\u00e9s mesurent 'cote'.\n    Compl\u00e9tez cette fonction !\n    \"\"\"\n    pass  # \u00c0 remplacer par votre code\n\ndef rectangle(longueur, largeur):\n    \"\"\"\n    Dessine un rectangle avec la longueur et la largeur donn\u00e9es.\n    Compl\u00e9tez cette fonction !\n    \"\"\"\n    pass  # \u00c0 remplacer par votre code\n\n# -------------------------------\n# Fonctions compos\u00e9es\n# -------------------------------\n\ndef maison(cote):\n    \"\"\"\n    Dessine une maison : un carr\u00e9 + un toit triangulaire.\n    Utilisez les fonctions carre() et triangle().\n    \"\"\"\n    pass  # \u00c0 remplacer par votre code\n\ndef route(longueur, largeur, bandes):\n    \"\"\"\n    Dessine une route avec 'bandes' blanches au milieu.\n    Utilisez rectangle() et une boucle pour les bandes.\n    \"\"\"\n    pass  # \u00c0 remplacer par votre code\n\ndef ville(nb_maisons):\n    \"\"\"\n    Dessine une ville avec 'nb_maisons' maisons et une route.\n    Utilisez maison() et route().\n    Ajoutez \u00e9ventuellement des couleurs et des positions diff\u00e9rentes.\n    \"\"\"\n    pass  # \u00c0 remplacer par votre code\n\n# -------------------------------\n# Testez vos fonctions !\n# -------------------------------\n\nreset()\n# Exemples d'appel (\u00e0 compl\u00e9ter) :\n# maison(100)\n# route(400, 50, 8)\n# ville(5)\n</code></pre>"},{"location":"SNT/Programmation_Python/sommaire/","title":"\ud83d\udc0d Programmation Python","text":""},{"location":"SNT/Programmation_Python/sommaire/#cour","title":"Cour","text":"<ul> <li>introduction \u00e0 la programmation</li> </ul>"},{"location":"SNT/Programmation_Python/sommaire/#exercices","title":"Exercices","text":"<ul> <li>exercices complementaires</li> <li>mini-projet</li> </ul>"},{"location":"SNT/Programmation_Python/sommaire/#fiche-memo","title":"Fiche M\u00e9mo","text":"<ul> <li>fiche m\u00e9mo</li> </ul>"},{"location":"SNT/Reseaux_sociaux/exo_comp/","title":"exercice complementaire","text":""},{"location":"SNT/Reseaux_sociaux/sommaire/","title":"Sommaire","text":"<ul> <li>cours</li> <li>travaux diriger</li> <li>travaux pratique</li> <li>exercice complementaire</li> </ul>"},{"location":"SNT/Reseaux_sociaux/travaux_pratique/","title":"travaux pratique","text":""},{"location":"SNT/Web/cours/","title":"Cours sur Internet","text":""},{"location":"SNT/Web/cours/#internet","title":"Internet","text":"<p>...</p>"},{"location":"SNT/Web/exo_comp/","title":"exercice complementaire","text":""},{"location":"SNT/Web/sommaire/","title":"Sommaire","text":"<ul> <li>cours</li> <li>travaux diriger</li> <li>travaux pratique</li> <li>exercice complementaire</li> </ul>"},{"location":"SNT/Web/travaux_pratique/","title":"travaux pratique","text":""},{"location":"SNT/introduction_snt/activiter_introductif/","title":"Activit\u00e9 d\u2019introduction","text":"<p>Le but de cette activit\u00e9 est de vous amener \u00e0 r\u00e9fl\u00e9chir et \u00e0 \u00e9changer autour des th\u00e8mes de la SNT.</p> <p>Pour chacun des sommets propos\u00e9s :</p> <ul> <li>Notez ce que vous pensez d\u00e9j\u00e0 conna\u00eetre sur ce sujet.</li> <li>Formulez des questions sur ce que vous ne comprenez pas encore ou que vous aimeriez d\u00e9couvrir.</li> </ul> <p>L\u2019objectif n\u2019est pas d\u2019avoir \u201cla bonne r\u00e9ponse\u201d, mais de partager vos id\u00e9es et vos curiosit\u00e9s.</p> <p></p>"}]}